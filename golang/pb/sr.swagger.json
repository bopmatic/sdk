{
  "swagger": "2.0",
  "info": {
    "title": "pb/sr.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ServiceRunner"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/ServiceRunner/DeletePackage": {
      "post": {
        "operationId": "DeletePackage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeletePackageReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeletePackageRequest"
            }
          }
        ],
        "tags": [
          "ServiceRunner"
        ]
      }
    },
    "/ServiceRunner/DeployPackage": {
      "post": {
        "operationId": "DeployPackage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeployPackageReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeployPackageRequest"
            }
          }
        ],
        "tags": [
          "ServiceRunner"
        ]
      }
    },
    "/ServiceRunner/DescribePackage": {
      "post": {
        "operationId": "DescribePackage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DescribePackageReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribePackageRequest"
            }
          }
        ],
        "tags": [
          "ServiceRunner"
        ]
      }
    },
    "/ServiceRunner/GetLogs": {
      "post": {
        "operationId": "GetLogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetLogsReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetLogsRequest"
            }
          }
        ],
        "tags": [
          "ServiceRunner"
        ]
      }
    },
    "/ServiceRunner/GetUploadURL": {
      "post": {
        "operationId": "GetUploadURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetUploadURLReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetUploadURLRequest"
            }
          }
        ],
        "tags": [
          "ServiceRunner"
        ]
      }
    },
    "/ServiceRunner/ListPackages": {
      "post": {
        "operationId": "ListPackages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListPackagesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListPackagesRequest"
            }
          }
        ],
        "tags": [
          "ServiceRunner"
        ]
      }
    }
  },
  "definitions": {
    "DeletePackageReply": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/PackageState"
        }
      }
    },
    "DeletePackageRequest": {
      "type": "object",
      "properties": {
        "packageId": {
          "type": "string"
        }
      }
    },
    "DeployPackageReply": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/PackageState"
        }
      }
    },
    "DeployPackageRequest": {
      "type": "object",
      "properties": {
        "desc": {
          "$ref": "#/definitions/PackageDescription"
        }
      }
    },
    "DescribePackageReply": {
      "type": "object",
      "properties": {
        "desc": {
          "$ref": "#/definitions/PackageDescription"
        },
        "packageState": {
          "$ref": "#/definitions/PackageState"
        },
        "siteEndpoint": {
          "type": "string",
          "title": "the following fields are only valid when packageState==PRODUCTION"
        },
        "rpcEndpoints": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DescribePackageRequest": {
      "type": "object",
      "properties": {
        "packageId": {
          "type": "string"
        }
      }
    },
    "GetLogsEntry": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "uint64",
          "title": "timestamp of the log message expressed as the number of"
        },
        "message": {
          "type": "string",
          "description": "log message",
          "title": "seconds since Jan 1, 1970 00:00:00 UTC"
        }
      }
    },
    "GetLogsReply": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetLogsEntry"
          }
        }
      }
    },
    "GetLogsRequest": {
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string",
          "title": "name of the Bopmatic project"
        },
        "serviceName": {
          "type": "string",
          "title": "name of a service defined within the Bopmatic project"
        },
        "startTime": {
          "type": "string",
          "format": "uint64",
          "title": "earliest log message to retrieve expressed as the number"
        },
        "endTime": {
          "type": "string",
          "format": "uint64",
          "description": "latest log message to retrieve expressed as the number of",
          "title": "of seconds since Jan 1, 1970 00:00:00 UTC"
        }
      }
    },
    "GetUploadURLReply": {
      "type": "object",
      "properties": {
        "URL": {
          "type": "string"
        }
      }
    },
    "GetUploadURLRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      }
    },
    "ListPackagesReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListPackagesReplyListPackagesItem"
          }
        }
      }
    },
    "ListPackagesReplyListPackagesItem": {
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "packageId": {
          "type": "string"
        }
      }
    },
    "ListPackagesRequest": {
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string",
          "title": "leave empty for all projects"
        }
      }
    },
    "PackageDescription": {
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string",
          "title": "name of the Bopmatic project; must be unique"
        },
        "packageId": {
          "type": "string",
          "title": "hex string of first 4 bytes of packageXsum"
        },
        "packageXsum": {
          "type": "string",
          "format": "byte",
          "title": "sha256 checksum of packageTarballData"
        },
        "packageTarballData": {
          "type": "string",
          "format": "byte",
          "title": "package tarball content in .tar.xz format (limited to 6MiB);"
        },
        "packageTarballURL": {
          "type": "string",
          "title": "URL to package tarball (when larger than 6MiB)"
        }
      }
    },
    "PackageState": {
      "type": "string",
      "enum": [
        "UPLOADING",
        "UPLOADED",
        "VALIDATING",
        "INVALID",
        "BUILDING",
        "DEPLOYING",
        "PRODUCTION",
        "DEACTIVATING",
        "DELETING",
        "SUPPORT_NEEDED",
        "DELETED",
        "UNKNOWN_PKG_STATE"
      ],
      "default": "UPLOADING",
      "title": "- UPLOADING: package is currently in the process of being uploaded\n - UPLOADED: upload has completed; the package has not yet started validataion\n - VALIDATING: the package is in the process of being validated\n - INVALID: the package failed validation checks and cannot be deployed\n - BUILDING: the package passed validation and is in the process of being built\n - DEPLOYING: the package is built and in the process of being deployed to production\n - PRODUCTION: the package is active in production\n - DEACTIVATING: the package is in the process of being deactivated from production\n - DELETING: the package is in the process of being deleted\n - SUPPORT_NEEDED: something went wrong and Bopmatic support needs to investigate\n - DELETED: the package has been deleted\n - UNKNOWN_PKG_STATE: MAX_INT"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
