// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: pb/sr.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceRunnerStatus int32

const (
	ServiceRunnerStatus_STATUS_OK                 ServiceRunnerStatus = 0
	ServiceRunnerStatus_STATUS_NOT_FOUND          ServiceRunnerStatus = 1
	ServiceRunnerStatus_STATUS_DNS_CONFLICT       ServiceRunnerStatus = 2
	ServiceRunnerStatus_STATUS_ACCT_LIMIT_REACHED ServiceRunnerStatus = 3
	ServiceRunnerStatus_STATUS_EXISTS             ServiceRunnerStatus = 4
	ServiceRunnerStatus_STATUS_NOT_EXISTS         ServiceRunnerStatus = 5
	ServiceRunnerStatus_STATUS_UNKNOWN            ServiceRunnerStatus = 2147483647 // MAX_INT
)

// Enum value maps for ServiceRunnerStatus.
var (
	ServiceRunnerStatus_name = map[int32]string{
		0:          "STATUS_OK",
		1:          "STATUS_NOT_FOUND",
		2:          "STATUS_DNS_CONFLICT",
		3:          "STATUS_ACCT_LIMIT_REACHED",
		4:          "STATUS_EXISTS",
		5:          "STATUS_NOT_EXISTS",
		2147483647: "STATUS_UNKNOWN",
	}
	ServiceRunnerStatus_value = map[string]int32{
		"STATUS_OK":                 0,
		"STATUS_NOT_FOUND":          1,
		"STATUS_DNS_CONFLICT":       2,
		"STATUS_ACCT_LIMIT_REACHED": 3,
		"STATUS_EXISTS":             4,
		"STATUS_NOT_EXISTS":         5,
		"STATUS_UNKNOWN":            2147483647,
	}
)

func (x ServiceRunnerStatus) Enum() *ServiceRunnerStatus {
	p := new(ServiceRunnerStatus)
	*p = x
	return p
}

func (x ServiceRunnerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceRunnerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_sr_proto_enumTypes[0].Descriptor()
}

func (ServiceRunnerStatus) Type() protoreflect.EnumType {
	return &file_pb_sr_proto_enumTypes[0]
}

func (x ServiceRunnerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceRunnerStatus.Descriptor instead.
func (ServiceRunnerStatus) EnumDescriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{0}
}

type ProjectState int32

const (
	// the project has been created but no packages are presently active in any environment
	// and there are no pending deployments
	ProjectState_INACTIVE ProjectState = 0
	// the project has at least one package presently active in at least one environment, or
	// has at least one pending deployment
	ProjectState_ACTIVE ProjectState = 1
)

// Enum value maps for ProjectState.
var (
	ProjectState_name = map[int32]string{
		0: "INACTIVE",
		1: "ACTIVE",
	}
	ProjectState_value = map[string]int32{
		"INACTIVE": 0,
		"ACTIVE":   1,
	}
)

func (x ProjectState) Enum() *ProjectState {
	p := new(ProjectState)
	*p = x
	return p
}

func (x ProjectState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProjectState) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_sr_proto_enumTypes[1].Descriptor()
}

func (ProjectState) Type() protoreflect.EnumType {
	return &file_pb_sr_proto_enumTypes[1]
}

func (x ProjectState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProjectState.Descriptor instead.
func (ProjectState) EnumDescriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{1}
}

type DeploymentType int32

const (
	DeploymentType_NEW_PACKAGE DeploymentType = 0 // the deployment was created in order to deploy a new package to
	// the environment (customer initiated)
	DeploymentType_ENV_TEARDOWN DeploymentType = 1 // the deployment was created in order to remove the project from
	// the environment (customer initiated)
	DeploymentType_SECURITY_UPDATE DeploymentType = 2 // the deployment was created in order to perform a security update
	// on the backend infrastructure (service initiated)
	DeploymentType_INF_UPDATE          DeploymentType = 3          // the deployment was created in order to perform a non-security related
	DeploymentType_UNKNOWN_DEPLOY_TYPE DeploymentType = 2147483647 // MAX_INT
)

// Enum value maps for DeploymentType.
var (
	DeploymentType_name = map[int32]string{
		0:          "NEW_PACKAGE",
		1:          "ENV_TEARDOWN",
		2:          "SECURITY_UPDATE",
		3:          "INF_UPDATE",
		2147483647: "UNKNOWN_DEPLOY_TYPE",
	}
	DeploymentType_value = map[string]int32{
		"NEW_PACKAGE":         0,
		"ENV_TEARDOWN":        1,
		"SECURITY_UPDATE":     2,
		"INF_UPDATE":          3,
		"UNKNOWN_DEPLOY_TYPE": 2147483647,
	}
)

func (x DeploymentType) Enum() *DeploymentType {
	p := new(DeploymentType)
	*p = x
	return p
}

func (x DeploymentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentType) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_sr_proto_enumTypes[2].Descriptor()
}

func (DeploymentType) Type() protoreflect.EnumType {
	return &file_pb_sr_proto_enumTypes[2]
}

func (x DeploymentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentType.Descriptor instead.
func (DeploymentType) EnumDescriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{2}
}

type DeploymentInitiator int32

const (
	DeploymentInitiator_CUSTOMER            DeploymentInitiator = 0          // the customer initiated the deployment
	DeploymentInitiator_SERVICE             DeploymentInitiator = 1          // Bopmatic initiated the deployment
	DeploymentInitiator_UNKNOWN_DEPLOY_INIT DeploymentInitiator = 2147483647 // MAX_INT
)

// Enum value maps for DeploymentInitiator.
var (
	DeploymentInitiator_name = map[int32]string{
		0:          "CUSTOMER",
		1:          "SERVICE",
		2147483647: "UNKNOWN_DEPLOY_INIT",
	}
	DeploymentInitiator_value = map[string]int32{
		"CUSTOMER":            0,
		"SERVICE":             1,
		"UNKNOWN_DEPLOY_INIT": 2147483647,
	}
)

func (x DeploymentInitiator) Enum() *DeploymentInitiator {
	p := new(DeploymentInitiator)
	*p = x
	return p
}

func (x DeploymentInitiator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentInitiator) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_sr_proto_enumTypes[3].Descriptor()
}

func (DeploymentInitiator) Type() protoreflect.EnumType {
	return &file_pb_sr_proto_enumTypes[3]
}

func (x DeploymentInitiator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentInitiator.Descriptor instead.
func (DeploymentInitiator) EnumDescriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{3}
}

type DeploymentState int32

const (
	DeploymentState_CREATED         DeploymentState = 0 // the deployment has been created, but no action has yet been taken
	DeploymentState_DPLY_VALIDATING DeploymentState = 1 // the package associated with the deployment is in the process of being
	// validated
	DeploymentState_DPLY_BUILDING DeploymentState = 2 // the package associated with the deployment passed validation and is in
	// the process of being compiled
	DeploymentState_DEPLOYING DeploymentState = 3 // the package associated with the deployment compiled successfully and is
	// in the process of being deployed to the environment specified
	DeploymentState_SUCCESS DeploymentState = 4 // the deployment was successful and the package associated with the
	// deployment is now active in the environment specified
	DeploymentState_FAILED               DeploymentState = 5          // the deployment failed; see DeploymentDescription.stateDetail for further
	DeploymentState_UNKNOWN_DEPLOY_STATE DeploymentState = 2147483647 // MAX_INT
)

// Enum value maps for DeploymentState.
var (
	DeploymentState_name = map[int32]string{
		0:          "CREATED",
		1:          "DPLY_VALIDATING",
		2:          "DPLY_BUILDING",
		3:          "DEPLOYING",
		4:          "SUCCESS",
		5:          "FAILED",
		2147483647: "UNKNOWN_DEPLOY_STATE",
	}
	DeploymentState_value = map[string]int32{
		"CREATED":              0,
		"DPLY_VALIDATING":      1,
		"DPLY_BUILDING":        2,
		"DEPLOYING":            3,
		"SUCCESS":              4,
		"FAILED":               5,
		"UNKNOWN_DEPLOY_STATE": 2147483647,
	}
)

func (x DeploymentState) Enum() *DeploymentState {
	p := new(DeploymentState)
	*p = x
	return p
}

func (x DeploymentState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentState) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_sr_proto_enumTypes[4].Descriptor()
}

func (DeploymentState) Type() protoreflect.EnumType {
	return &file_pb_sr_proto_enumTypes[4]
}

func (x DeploymentState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentState.Descriptor instead.
func (DeploymentState) EnumDescriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{4}
}

type DeploymentStateDetail int32

const (
	DeploymentStateDetail_NONE        DeploymentStateDetail = 0
	DeploymentStateDetail_PKG_INVALID DeploymentStateDetail = 1 // the package associated with the deployment failed validation checks and
	// cannot be deployed
	DeploymentStateDetail_BLD_INVALID              DeploymentStateDetail = 2          // the package associated with the deployment failed to compile
	DeploymentStateDetail_DPLY_SUPPORT_NEEDED      DeploymentStateDetail = 3          // the deployment failed for an unknown reason; Bopmatic support
	DeploymentStateDetail_UNKNOWN_DEPLOY_STATE_DET DeploymentStateDetail = 2147483647 // MAX_INT
)

// Enum value maps for DeploymentStateDetail.
var (
	DeploymentStateDetail_name = map[int32]string{
		0:          "NONE",
		1:          "PKG_INVALID",
		2:          "BLD_INVALID",
		3:          "DPLY_SUPPORT_NEEDED",
		2147483647: "UNKNOWN_DEPLOY_STATE_DET",
	}
	DeploymentStateDetail_value = map[string]int32{
		"NONE":                     0,
		"PKG_INVALID":              1,
		"BLD_INVALID":              2,
		"DPLY_SUPPORT_NEEDED":      3,
		"UNKNOWN_DEPLOY_STATE_DET": 2147483647,
	}
)

func (x DeploymentStateDetail) Enum() *DeploymentStateDetail {
	p := new(DeploymentStateDetail)
	*p = x
	return p
}

func (x DeploymentStateDetail) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentStateDetail) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_sr_proto_enumTypes[5].Descriptor()
}

func (DeploymentStateDetail) Type() protoreflect.EnumType {
	return &file_pb_sr_proto_enumTypes[5]
}

func (x DeploymentStateDetail) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentStateDetail.Descriptor instead.
func (DeploymentStateDetail) EnumDescriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{5}
}

type PackageState int32

const (
	PackageState_UPLOADING      PackageState = 0 // package is currently in the process of being uploaded
	PackageState_UPLOADED       PackageState = 1 // upload has completed; the package has not yet started validataion
	PackageState_PKG_VALIDATING PackageState = 2 // the package is in the process of being validated
	PackageState_INVALID        PackageState = 3 // the package failed validation checks or builds and cannot be
	// deployed
	PackageState_PKG_BUILDING       PackageState = 4          // the package passed validation and is in the process of being built
	PackageState_PKG_SUPPORT_NEEDED PackageState = 9          // something went wrong and Bopmatic support is investigating
	PackageState_DELETED            PackageState = 10         // the package has been deleted
	PackageState_BUILT              PackageState = 11         // the package was successfully built and is eligible to be deployed
	PackageState_UNKNOWN_PKG_STATE  PackageState = 2147483647 // MAX_INT
)

// Enum value maps for PackageState.
var (
	PackageState_name = map[int32]string{
		0:          "UPLOADING",
		1:          "UPLOADED",
		2:          "PKG_VALIDATING",
		3:          "INVALID",
		4:          "PKG_BUILDING",
		9:          "PKG_SUPPORT_NEEDED",
		10:         "DELETED",
		11:         "BUILT",
		2147483647: "UNKNOWN_PKG_STATE",
	}
	PackageState_value = map[string]int32{
		"UPLOADING":          0,
		"UPLOADED":           1,
		"PKG_VALIDATING":     2,
		"INVALID":            3,
		"PKG_BUILDING":       4,
		"PKG_SUPPORT_NEEDED": 9,
		"DELETED":            10,
		"BUILT":              11,
		"UNKNOWN_PKG_STATE":  2147483647,
	}
)

func (x PackageState) Enum() *PackageState {
	p := new(PackageState)
	*p = x
	return p
}

func (x PackageState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PackageState) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_sr_proto_enumTypes[6].Descriptor()
}

func (PackageState) Type() protoreflect.EnumType {
	return &file_pb_sr_proto_enumTypes[6]
}

func (x PackageState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PackageState.Descriptor instead.
func (PackageState) EnumDescriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{6}
}

type MetricsScope int32

const (
	MetricsScope_METRIC_SCOPE_ALL       MetricsScope = 0
	MetricsScope_METRIC_SCOPE_SERVICE   MetricsScope = 1
	MetricsScope_METRIC_SCOPE_DATASTORE MetricsScope = 2
	MetricsScope_METRIC_SCOPE_DATABASE  MetricsScope = 3
	MetricsScope_UNKNOWN_METRIC_SCOPE   MetricsScope = 2147483647 // MAX_INT
)

// Enum value maps for MetricsScope.
var (
	MetricsScope_name = map[int32]string{
		0:          "METRIC_SCOPE_ALL",
		1:          "METRIC_SCOPE_SERVICE",
		2:          "METRIC_SCOPE_DATASTORE",
		3:          "METRIC_SCOPE_DATABASE",
		2147483647: "UNKNOWN_METRIC_SCOPE",
	}
	MetricsScope_value = map[string]int32{
		"METRIC_SCOPE_ALL":       0,
		"METRIC_SCOPE_SERVICE":   1,
		"METRIC_SCOPE_DATASTORE": 2,
		"METRIC_SCOPE_DATABASE":  3,
		"UNKNOWN_METRIC_SCOPE":   2147483647,
	}
)

func (x MetricsScope) Enum() *MetricsScope {
	p := new(MetricsScope)
	*p = x
	return p
}

func (x MetricsScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetricsScope) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_sr_proto_enumTypes[7].Descriptor()
}

func (MetricsScope) Type() protoreflect.EnumType {
	return &file_pb_sr_proto_enumTypes[7]
}

func (x MetricsScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetricsScope.Descriptor instead.
func (MetricsScope) EnumDescriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{7}
}

type MetricsFormat int32

const (
	MetricsFormat_METRIC_FORMAT_OPENMETRICS MetricsFormat = 0
	MetricsFormat_UNKNOWN_METRIC_FORMAT     MetricsFormat = 2147483647 // MAX_INT
)

// Enum value maps for MetricsFormat.
var (
	MetricsFormat_name = map[int32]string{
		0:          "METRIC_FORMAT_OPENMETRICS",
		2147483647: "UNKNOWN_METRIC_FORMAT",
	}
	MetricsFormat_value = map[string]int32{
		"METRIC_FORMAT_OPENMETRICS": 0,
		"UNKNOWN_METRIC_FORMAT":     2147483647,
	}
)

func (x MetricsFormat) Enum() *MetricsFormat {
	p := new(MetricsFormat)
	*p = x
	return p
}

func (x MetricsFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetricsFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_sr_proto_enumTypes[8].Descriptor()
}

func (MetricsFormat) Type() protoreflect.EnumType {
	return &file_pb_sr_proto_enumTypes[8]
}

func (x MetricsFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetricsFormat.Descriptor instead.
func (MetricsFormat) EnumDescriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{8}
}

type ServiceRunnerResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       ServiceRunnerStatus `protobuf:"varint,1,opt,name=status,proto3,enum=ServiceRunnerStatus" json:"status,omitempty"`
	StatusDetail string              `protobuf:"bytes,2,opt,name=statusDetail,proto3" json:"statusDetail,omitempty"`
}

func (x *ServiceRunnerResult) Reset() {
	*x = ServiceRunnerResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceRunnerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceRunnerResult) ProtoMessage() {}

func (x *ServiceRunnerResult) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceRunnerResult.ProtoReflect.Descriptor instead.
func (*ServiceRunnerResult) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceRunnerResult) GetStatus() ServiceRunnerStatus {
	if x != nil {
		return x.Status
	}
	return ServiceRunnerStatus_STATUS_OK
}

func (x *ServiceRunnerResult) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

type ProjectHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of the project
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the dns prefix where this project's endpoints will be surfaced; defaults to 'name'
	DnsPrefix string `protobuf:"bytes,2,opt,name=dnsPrefix,proto3" json:"dnsPrefix,omitempty"`
	// the base domain where this project's endpoints will be surfaced; defaults to bopmatic.com
	DnsDomain string `protobuf:"bytes,3,opt,name=dnsDomain,proto3" json:"dnsDomain,omitempty"`
}

func (x *ProjectHeader) Reset() {
	*x = ProjectHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectHeader) ProtoMessage() {}

func (x *ProjectHeader) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectHeader.ProtoReflect.Descriptor instead.
func (*ProjectHeader) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectHeader) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectHeader) GetDnsPrefix() string {
	if x != nil {
		return x.DnsPrefix
	}
	return ""
}

func (x *ProjectHeader) GetDnsDomain() string {
	if x != nil {
		return x.DnsDomain
	}
	return ""
}

type ProjectDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a unique identifier associated with this project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// project header
	Header *ProjectHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	// the current state of the project
	State ProjectState `protobuf:"varint,3,opt,name=state,proto3,enum=ProjectState" json:"state,omitempty"`
	// time the project was created expressed as the number of seconds since
	// Jan 1, 1970 00:00:00 UTC
	CreateTime uint64 `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// a list of previously completed deployment ids which are presently active across all
	// environments the project has been deployed into
	ActiveDeployIds []string `protobuf:"bytes,5,rep,name=activeDeployIds,proto3" json:"activeDeployIds,omitempty"`
	// a list of deployment ids which are presently running involving this project across all
	// environments
	PendingDeployIds []string `protobuf:"bytes,6,rep,name=pendingDeployIds,proto3" json:"pendingDeployIds,omitempty"`
}

func (x *ProjectDescription) Reset() {
	*x = ProjectDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDescription) ProtoMessage() {}

func (x *ProjectDescription) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDescription.ProtoReflect.Descriptor instead.
func (*ProjectDescription) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectDescription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProjectDescription) GetHeader() *ProjectHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ProjectDescription) GetState() ProjectState {
	if x != nil {
		return x.State
	}
	return ProjectState_INACTIVE
}

func (x *ProjectDescription) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ProjectDescription) GetActiveDeployIds() []string {
	if x != nil {
		return x.ActiveDeployIds
	}
	return nil
}

func (x *ProjectDescription) GetPendingDeployIds() []string {
	if x != nil {
		return x.PendingDeployIds
	}
	return nil
}

type CreateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// project header
	Header *ProjectHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *CreateProjectRequest) Reset() {
	*x = CreateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRequest) ProtoMessage() {}

func (x *CreateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{3}
}

func (x *CreateProjectRequest) GetHeader() *ProjectHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type CreateProjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// a unique identifier associated with this project
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateProjectReply) Reset() {
	*x = CreateProjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectReply) ProtoMessage() {}

func (x *CreateProjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectReply.ProtoReflect.Descriptor instead.
func (*CreateProjectReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{4}
}

func (x *CreateProjectReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CreateProjectReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a unique identifier associated with this project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProjectRequest) Reset() {
	*x = DeleteProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectRequest) ProtoMessage() {}

func (x *DeleteProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectRequest.ProtoReflect.Descriptor instead.
func (*DeleteProjectRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteProjectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteProjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteProjectReply) Reset() {
	*x = DeleteProjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectReply) ProtoMessage() {}

func (x *DeleteProjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectReply.ProtoReflect.Descriptor instead.
func (*DeleteProjectReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteProjectReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListProjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListProjectsRequest) Reset() {
	*x = ListProjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsRequest) ProtoMessage() {}

func (x *ListProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsRequest.ProtoReflect.Descriptor instead.
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{7}
}

type ListProjectsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// a list of project ids
	Ids []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ListProjectsReply) Reset() {
	*x = ListProjectsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsReply) ProtoMessage() {}

func (x *ListProjectsReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsReply.ProtoReflect.Descriptor instead.
func (*ListProjectsReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{8}
}

func (x *ListProjectsReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListProjectsReply) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DescribeProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a unique identifier associated with this project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DescribeProjectRequest) Reset() {
	*x = DescribeProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeProjectRequest) ProtoMessage() {}

func (x *DescribeProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeProjectRequest.ProtoReflect.Descriptor instead.
func (*DescribeProjectRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{9}
}

func (x *DescribeProjectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DescribeProjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// project description
	Desc *ProjectDescription `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *DescribeProjectReply) Reset() {
	*x = DescribeProjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeProjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeProjectReply) ProtoMessage() {}

func (x *DescribeProjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeProjectReply.ProtoReflect.Descriptor instead.
func (*DescribeProjectReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{10}
}

func (x *DescribeProjectReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DescribeProjectReply) GetDesc() *ProjectDescription {
	if x != nil {
		return x.Desc
	}
	return nil
}

type EnvironmentHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of the environment
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the dns prefix to use for endpoints in this environment (defaults to name)
	DnsPrefix string `protobuf:"bytes,2,opt,name=dnsPrefix,proto3" json:"dnsPrefix,omitempty"`
}

func (x *EnvironmentHeader) Reset() {
	*x = EnvironmentHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentHeader) ProtoMessage() {}

func (x *EnvironmentHeader) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentHeader.ProtoReflect.Descriptor instead.
func (*EnvironmentHeader) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{11}
}

func (x *EnvironmentHeader) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnvironmentHeader) GetDnsPrefix() string {
	if x != nil {
		return x.DnsPrefix
	}
	return ""
}

type EnvironmentDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a unique identifier associated with this environment
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the environment header
	Header *EnvironmentHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	// time the environment was created expressed as the number of seconds since
	// Jan 1, 1970 00:00:00 UTC
	CreateTime uint64 `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// a list of previously completed deployment ids which are presently active in the
	// environment
	ActiveDeployIds []string `protobuf:"bytes,4,rep,name=activeDeployIds,proto3" json:"activeDeployIds,omitempty"`
	// a list of deployment ids which are presently running in the environment
	PendingDeployIds []string `protobuf:"bytes,5,rep,name=pendingDeployIds,proto3" json:"pendingDeployIds,omitempty"`
}

func (x *EnvironmentDescription) Reset() {
	*x = EnvironmentDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentDescription) ProtoMessage() {}

func (x *EnvironmentDescription) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentDescription.ProtoReflect.Descriptor instead.
func (*EnvironmentDescription) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{12}
}

func (x *EnvironmentDescription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EnvironmentDescription) GetHeader() *EnvironmentHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *EnvironmentDescription) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *EnvironmentDescription) GetActiveDeployIds() []string {
	if x != nil {
		return x.ActiveDeployIds
	}
	return nil
}

func (x *EnvironmentDescription) GetPendingDeployIds() []string {
	if x != nil {
		return x.PendingDeployIds
	}
	return nil
}

type CreateEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the environment header
	Header *EnvironmentHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *CreateEnvironmentRequest) Reset() {
	*x = CreateEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvironmentRequest) ProtoMessage() {}

func (x *CreateEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*CreateEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{13}
}

func (x *CreateEnvironmentRequest) GetHeader() *EnvironmentHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type CreateEnvironmentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// a unique identifier associated with this environment
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateEnvironmentReply) Reset() {
	*x = CreateEnvironmentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEnvironmentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvironmentReply) ProtoMessage() {}

func (x *CreateEnvironmentReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvironmentReply.ProtoReflect.Descriptor instead.
func (*CreateEnvironmentReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{14}
}

func (x *CreateEnvironmentReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CreateEnvironmentReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a unique identifier associated with this environment
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteEnvironmentRequest) Reset() {
	*x = DeleteEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEnvironmentRequest) ProtoMessage() {}

func (x *DeleteEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*DeleteEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteEnvironmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteEnvironmentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteEnvironmentReply) Reset() {
	*x = DeleteEnvironmentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEnvironmentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEnvironmentReply) ProtoMessage() {}

func (x *DeleteEnvironmentReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEnvironmentReply.ProtoReflect.Descriptor instead.
func (*DeleteEnvironmentReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteEnvironmentReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListEnvironmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListEnvironmentsRequest) Reset() {
	*x = ListEnvironmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnvironmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnvironmentsRequest) ProtoMessage() {}

func (x *ListEnvironmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnvironmentsRequest.ProtoReflect.Descriptor instead.
func (*ListEnvironmentsRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{17}
}

type ListEnvironmentsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// a list of environment ids
	Ids []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ListEnvironmentsReply) Reset() {
	*x = ListEnvironmentsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnvironmentsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnvironmentsReply) ProtoMessage() {}

func (x *ListEnvironmentsReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnvironmentsReply.ProtoReflect.Descriptor instead.
func (*ListEnvironmentsReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{18}
}

func (x *ListEnvironmentsReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListEnvironmentsReply) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DescribeEnvironmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a unique identifier associated with this environment
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DescribeEnvironmentRequest) Reset() {
	*x = DescribeEnvironmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeEnvironmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeEnvironmentRequest) ProtoMessage() {}

func (x *DescribeEnvironmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeEnvironmentRequest.ProtoReflect.Descriptor instead.
func (*DescribeEnvironmentRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{19}
}

func (x *DescribeEnvironmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DescribeEnvironmentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// environment destription
	Desc *EnvironmentDescription `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *DescribeEnvironmentReply) Reset() {
	*x = DescribeEnvironmentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeEnvironmentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeEnvironmentReply) ProtoMessage() {}

func (x *DescribeEnvironmentReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeEnvironmentReply.ProtoReflect.Descriptor instead.
func (*DescribeEnvironmentReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{20}
}

func (x *DescribeEnvironmentReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DescribeEnvironmentReply) GetDesc() *EnvironmentDescription {
	if x != nil {
		return x.Desc
	}
	return nil
}

type ProjEnvHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a unique identifier associated with the project to query; leave blank
	// for all
	ProjId string `protobuf:"bytes,1,opt,name=projId,proto3" json:"projId,omitempty"`
	// a unique identifier associated with the environment to query; leave blank
	// for all
	EnvId string `protobuf:"bytes,2,opt,name=envId,proto3" json:"envId,omitempty"`
}

func (x *ProjEnvHeader) Reset() {
	*x = ProjEnvHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjEnvHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjEnvHeader) ProtoMessage() {}

func (x *ProjEnvHeader) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjEnvHeader.ProtoReflect.Descriptor instead.
func (*ProjEnvHeader) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{21}
}

func (x *ProjEnvHeader) GetProjId() string {
	if x != nil {
		return x.ProjId
	}
	return ""
}

func (x *ProjEnvHeader) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

type DescribeSiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a project/environment tuple
	ProjEnvHeader *ProjEnvHeader `protobuf:"bytes,1,opt,name=projEnvHeader,proto3" json:"projEnvHeader,omitempty"`
}

func (x *DescribeSiteRequest) Reset() {
	*x = DescribeSiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeSiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSiteRequest) ProtoMessage() {}

func (x *DescribeSiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSiteRequest.ProtoReflect.Descriptor instead.
func (*DescribeSiteRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{22}
}

func (x *DescribeSiteRequest) GetProjEnvHeader() *ProjEnvHeader {
	if x != nil {
		return x.ProjEnvHeader
	}
	return nil
}

type DescribeSiteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// a project/environment tuple
	ProjEnvHeader *ProjEnvHeader `protobuf:"bytes,2,opt,name=projEnvHeader,proto3" json:"projEnvHeader,omitempty"`
	// site endpoint
	SiteEndpoint string `protobuf:"bytes,3,opt,name=siteEndpoint,proto3" json:"siteEndpoint,omitempty"`
}

func (x *DescribeSiteReply) Reset() {
	*x = DescribeSiteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeSiteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSiteReply) ProtoMessage() {}

func (x *DescribeSiteReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSiteReply.ProtoReflect.Descriptor instead.
func (*DescribeSiteReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{23}
}

func (x *DescribeSiteReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DescribeSiteReply) GetProjEnvHeader() *ProjEnvHeader {
	if x != nil {
		return x.ProjEnvHeader
	}
	return nil
}

func (x *DescribeSiteReply) GetSiteEndpoint() string {
	if x != nil {
		return x.SiteEndpoint
	}
	return ""
}

type ListServicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a project/environment tuple
	Header *ProjEnvHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *ListServicesRequest) Reset() {
	*x = ListServicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesRequest) ProtoMessage() {}

func (x *ListServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesRequest.ProtoReflect.Descriptor instead.
func (*ListServicesRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{24}
}

func (x *ListServicesRequest) GetHeader() *ProjEnvHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type ListServicesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// a project/environment tuple
	Header *ProjEnvHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	// a list of service names from the project deployed in the environment
	ServiceNames []string `protobuf:"bytes,3,rep,name=serviceNames,proto3" json:"serviceNames,omitempty"`
}

func (x *ListServicesReply) Reset() {
	*x = ListServicesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServicesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesReply) ProtoMessage() {}

func (x *ListServicesReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesReply.ProtoReflect.Descriptor instead.
func (*ListServicesReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{25}
}

func (x *ListServicesReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListServicesReply) GetHeader() *ProjEnvHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListServicesReply) GetServiceNames() []string {
	if x != nil {
		return x.ServiceNames
	}
	return nil
}

type ServiceHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a project/environment tuple
	ProjEnvHeader *ProjEnvHeader `protobuf:"bytes,1,opt,name=projEnvHeader,proto3" json:"projEnvHeader,omitempty"`
	// a unique service name within the project
	ServiceName string `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
}

func (x *ServiceHeader) Reset() {
	*x = ServiceHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceHeader) ProtoMessage() {}

func (x *ServiceHeader) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceHeader.ProtoReflect.Descriptor instead.
func (*ServiceHeader) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{26}
}

func (x *ServiceHeader) GetProjEnvHeader() *ProjEnvHeader {
	if x != nil {
		return x.ProjEnvHeader
	}
	return nil
}

func (x *ServiceHeader) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type DescribeServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// service header
	SvcHeader *ServiceHeader `protobuf:"bytes,1,opt,name=svcHeader,proto3" json:"svcHeader,omitempty"`
}

func (x *DescribeServiceRequest) Reset() {
	*x = DescribeServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeServiceRequest) ProtoMessage() {}

func (x *DescribeServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeServiceRequest.ProtoReflect.Descriptor instead.
func (*DescribeServiceRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{27}
}

func (x *DescribeServiceRequest) GetSvcHeader() *ServiceHeader {
	if x != nil {
		return x.SvcHeader
	}
	return nil
}

type ServiceDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// service header
	SvcHeader *ServiceHeader `protobuf:"bytes,1,opt,name=svcHeader,proto3" json:"svcHeader,omitempty"`
	// endpoints for each RPC within the service
	RpcEndpoints []string `protobuf:"bytes,2,rep,name=rpcEndpoints,proto3" json:"rpcEndpoints,omitempty"`
}

func (x *ServiceDescription) Reset() {
	*x = ServiceDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceDescription) ProtoMessage() {}

func (x *ServiceDescription) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceDescription.ProtoReflect.Descriptor instead.
func (*ServiceDescription) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{28}
}

func (x *ServiceDescription) GetSvcHeader() *ServiceHeader {
	if x != nil {
		return x.SvcHeader
	}
	return nil
}

func (x *ServiceDescription) GetRpcEndpoints() []string {
	if x != nil {
		return x.RpcEndpoints
	}
	return nil
}

type DescribeServiceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// service description
	Desc *ServiceDescription `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *DescribeServiceReply) Reset() {
	*x = DescribeServiceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeServiceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeServiceReply) ProtoMessage() {}

func (x *DescribeServiceReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeServiceReply.ProtoReflect.Descriptor instead.
func (*DescribeServiceReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{29}
}

func (x *DescribeServiceReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DescribeServiceReply) GetDesc() *ServiceDescription {
	if x != nil {
		return x.Desc
	}
	return nil
}

type ListDatastoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a project/environment tuple
	Header *ProjEnvHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *ListDatastoresRequest) Reset() {
	*x = ListDatastoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatastoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatastoresRequest) ProtoMessage() {}

func (x *ListDatastoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatastoresRequest.ProtoReflect.Descriptor instead.
func (*ListDatastoresRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{30}
}

func (x *ListDatastoresRequest) GetHeader() *ProjEnvHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type ListDatastoresReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// a project/environment tuple
	Header *ProjEnvHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	// a list of service names from the project deployed in the environment
	DatastoreNames []string `protobuf:"bytes,3,rep,name=datastoreNames,proto3" json:"datastoreNames,omitempty"`
}

func (x *ListDatastoresReply) Reset() {
	*x = ListDatastoresReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatastoresReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatastoresReply) ProtoMessage() {}

func (x *ListDatastoresReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatastoresReply.ProtoReflect.Descriptor instead.
func (*ListDatastoresReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{31}
}

func (x *ListDatastoresReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListDatastoresReply) GetHeader() *ProjEnvHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListDatastoresReply) GetDatastoreNames() []string {
	if x != nil {
		return x.DatastoreNames
	}
	return nil
}

type DatastoreHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a project/environment tuple
	ProjEnvHeader *ProjEnvHeader `protobuf:"bytes,1,opt,name=projEnvHeader,proto3" json:"projEnvHeader,omitempty"`
	// a unique service name within the project
	DatastoreName string `protobuf:"bytes,2,opt,name=datastoreName,proto3" json:"datastoreName,omitempty"`
}

func (x *DatastoreHeader) Reset() {
	*x = DatastoreHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatastoreHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatastoreHeader) ProtoMessage() {}

func (x *DatastoreHeader) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatastoreHeader.ProtoReflect.Descriptor instead.
func (*DatastoreHeader) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{32}
}

func (x *DatastoreHeader) GetProjEnvHeader() *ProjEnvHeader {
	if x != nil {
		return x.ProjEnvHeader
	}
	return nil
}

func (x *DatastoreHeader) GetDatastoreName() string {
	if x != nil {
		return x.DatastoreName
	}
	return ""
}

type DescribeDatastoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// datastore header
	DatastoreHeader *DatastoreHeader `protobuf:"bytes,1,opt,name=datastoreHeader,proto3" json:"datastoreHeader,omitempty"`
}

func (x *DescribeDatastoreRequest) Reset() {
	*x = DescribeDatastoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDatastoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDatastoreRequest) ProtoMessage() {}

func (x *DescribeDatastoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDatastoreRequest.ProtoReflect.Descriptor instead.
func (*DescribeDatastoreRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{33}
}

func (x *DescribeDatastoreRequest) GetDatastoreHeader() *DatastoreHeader {
	if x != nil {
		return x.DatastoreHeader
	}
	return nil
}

type DatastoreDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// service header
	DatastoreHeader *DatastoreHeader `protobuf:"bytes,1,opt,name=datastoreHeader,proto3" json:"datastoreHeader,omitempty"`
	// number of store objects
	NumObjects uint64 `protobuf:"varint,2,opt,name=numObjects,proto3" json:"numObjects,omitempty"`
	// amount of utilized capacity
	CapacityConsumedInBytes uint64 `protobuf:"varint,3,opt,name=capacityConsumedInBytes,proto3" json:"capacityConsumedInBytes,omitempty"`
}

func (x *DatastoreDescription) Reset() {
	*x = DatastoreDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatastoreDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatastoreDescription) ProtoMessage() {}

func (x *DatastoreDescription) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatastoreDescription.ProtoReflect.Descriptor instead.
func (*DatastoreDescription) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{34}
}

func (x *DatastoreDescription) GetDatastoreHeader() *DatastoreHeader {
	if x != nil {
		return x.DatastoreHeader
	}
	return nil
}

func (x *DatastoreDescription) GetNumObjects() uint64 {
	if x != nil {
		return x.NumObjects
	}
	return 0
}

func (x *DatastoreDescription) GetCapacityConsumedInBytes() uint64 {
	if x != nil {
		return x.CapacityConsumedInBytes
	}
	return 0
}

type DescribeDatastoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// datastore description
	Desc *DatastoreDescription `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *DescribeDatastoreReply) Reset() {
	*x = DescribeDatastoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDatastoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDatastoreReply) ProtoMessage() {}

func (x *DescribeDatastoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDatastoreReply.ProtoReflect.Descriptor instead.
func (*DescribeDatastoreReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{35}
}

func (x *DescribeDatastoreReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DescribeDatastoreReply) GetDesc() *DatastoreDescription {
	if x != nil {
		return x.Desc
	}
	return nil
}

type ListDatabasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a project/environment tuple
	Header *ProjEnvHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *ListDatabasesRequest) Reset() {
	*x = ListDatabasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatabasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatabasesRequest) ProtoMessage() {}

func (x *ListDatabasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatabasesRequest.ProtoReflect.Descriptor instead.
func (*ListDatabasesRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{36}
}

func (x *ListDatabasesRequest) GetHeader() *ProjEnvHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type ListDatabasesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// a project/environment tuple
	Header *ProjEnvHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	// a list of service names from the project deployed in the environment
	DatabaseNames []string `protobuf:"bytes,3,rep,name=databaseNames,proto3" json:"databaseNames,omitempty"`
}

func (x *ListDatabasesReply) Reset() {
	*x = ListDatabasesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatabasesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatabasesReply) ProtoMessage() {}

func (x *ListDatabasesReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatabasesReply.ProtoReflect.Descriptor instead.
func (*ListDatabasesReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{37}
}

func (x *ListDatabasesReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListDatabasesReply) GetHeader() *ProjEnvHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListDatabasesReply) GetDatabaseNames() []string {
	if x != nil {
		return x.DatabaseNames
	}
	return nil
}

type DatabaseHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a project/environment tuple
	ProjEnvHeader *ProjEnvHeader `protobuf:"bytes,1,opt,name=projEnvHeader,proto3" json:"projEnvHeader,omitempty"`
	// a unique service name within the project
	DatabaseName string `protobuf:"bytes,2,opt,name=databaseName,proto3" json:"databaseName,omitempty"`
}

func (x *DatabaseHeader) Reset() {
	*x = DatabaseHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseHeader) ProtoMessage() {}

func (x *DatabaseHeader) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseHeader.ProtoReflect.Descriptor instead.
func (*DatabaseHeader) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{38}
}

func (x *DatabaseHeader) GetProjEnvHeader() *ProjEnvHeader {
	if x != nil {
		return x.ProjEnvHeader
	}
	return nil
}

func (x *DatabaseHeader) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

type DescribeDatabaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// database header
	DatabaseHeader *DatabaseHeader `protobuf:"bytes,1,opt,name=databaseHeader,proto3" json:"databaseHeader,omitempty"`
}

func (x *DescribeDatabaseRequest) Reset() {
	*x = DescribeDatabaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDatabaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDatabaseRequest) ProtoMessage() {}

func (x *DescribeDatabaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDatabaseRequest.ProtoReflect.Descriptor instead.
func (*DescribeDatabaseRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{39}
}

func (x *DescribeDatabaseRequest) GetDatabaseHeader() *DatabaseHeader {
	if x != nil {
		return x.DatabaseHeader
	}
	return nil
}

type DatabaseDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// service header
	DatabaseHeader *DatabaseHeader `protobuf:"bytes,1,opt,name=databaseHeader,proto3" json:"databaseHeader,omitempty"`
	// a list of service names from the project deployed in the environment
	TableNames []string `protobuf:"bytes,2,rep,name=tableNames,proto3" json:"tableNames,omitempty"`
}

func (x *DatabaseDescription) Reset() {
	*x = DatabaseDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseDescription) ProtoMessage() {}

func (x *DatabaseDescription) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseDescription.ProtoReflect.Descriptor instead.
func (*DatabaseDescription) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{40}
}

func (x *DatabaseDescription) GetDatabaseHeader() *DatabaseHeader {
	if x != nil {
		return x.DatabaseHeader
	}
	return nil
}

func (x *DatabaseDescription) GetTableNames() []string {
	if x != nil {
		return x.TableNames
	}
	return nil
}

type DescribeDatabaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// database description
	Desc *DatabaseDescription `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *DescribeDatabaseReply) Reset() {
	*x = DescribeDatabaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDatabaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDatabaseReply) ProtoMessage() {}

func (x *DescribeDatabaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDatabaseReply.ProtoReflect.Descriptor instead.
func (*DescribeDatabaseReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{41}
}

func (x *DescribeDatabaseReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DescribeDatabaseReply) GetDesc() *DatabaseDescription {
	if x != nil {
		return x.Desc
	}
	return nil
}

type DeploymentHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the package id associated with this deployment
	PkgId string `protobuf:"bytes,1,opt,name=pkgId,proto3" json:"pkgId,omitempty"`
	// the project id associated with this deployment
	ProjId string `protobuf:"bytes,2,opt,name=projId,proto3" json:"projId,omitempty"`
	// the environment id associated with this deployment
	EnvId string `protobuf:"bytes,3,opt,name=envId,proto3" json:"envId,omitempty"`
	// the type of the deployment
	Type DeploymentType `protobuf:"varint,5,opt,name=type,proto3,enum=DeploymentType" json:"type,omitempty"`
	// the initiator of the deployment
	Initiator DeploymentInitiator `protobuf:"varint,6,opt,name=initiator,proto3,enum=DeploymentInitiator" json:"initiator,omitempty"`
}

func (x *DeploymentHeader) Reset() {
	*x = DeploymentHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentHeader) ProtoMessage() {}

func (x *DeploymentHeader) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentHeader.ProtoReflect.Descriptor instead.
func (*DeploymentHeader) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{42}
}

func (x *DeploymentHeader) GetPkgId() string {
	if x != nil {
		return x.PkgId
	}
	return ""
}

func (x *DeploymentHeader) GetProjId() string {
	if x != nil {
		return x.ProjId
	}
	return ""
}

func (x *DeploymentHeader) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *DeploymentHeader) GetType() DeploymentType {
	if x != nil {
		return x.Type
	}
	return DeploymentType_NEW_PACKAGE
}

func (x *DeploymentHeader) GetInitiator() DeploymentInitiator {
	if x != nil {
		return x.Initiator
	}
	return DeploymentInitiator_CUSTOMER
}

type DeploymentDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a unique identifier associated with this deployment
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// deployment header
	Header *DeploymentHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	// the deployment's state
	State DeploymentState `protobuf:"varint,3,opt,name=state,proto3,enum=DeploymentState" json:"state,omitempty"`
	// additional detail regarding the deployment's state
	StateDetail DeploymentStateDetail `protobuf:"varint,4,opt,name=stateDetail,proto3,enum=DeploymentStateDetail" json:"stateDetail,omitempty"`
	// time the deployment was created expressed as the number of seconds since
	// Jan 1, 1970 00:00:00 UTC
	CreateTime uint64 `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// time the package validation began expressed as the number of seconds since
	// Jan 1, 1970 00:00:00 UTC
	ValidationStartTime uint64 `protobuf:"varint,6,opt,name=validationStartTime,proto3" json:"validationStartTime,omitempty"`
	// time the package build began expressed as the number of seconds since
	// Jan 1, 1970 00:00:00 UTC
	BuildStartTime uint64 `protobuf:"varint,7,opt,name=buildStartTime,proto3" json:"buildStartTime,omitempty"`
	// time the environment deployment began expressed as the number of seconds since
	// Jan 1, 1970 00:00:00 UTC
	DeployStartTime uint64 `protobuf:"varint,8,opt,name=deployStartTime,proto3" json:"deployStartTime,omitempty"`
	// time the deployment completed
	EndTime uint64 `protobuf:"varint,9,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *DeploymentDescription) Reset() {
	*x = DeploymentDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentDescription) ProtoMessage() {}

func (x *DeploymentDescription) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentDescription.ProtoReflect.Descriptor instead.
func (*DeploymentDescription) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{43}
}

func (x *DeploymentDescription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeploymentDescription) GetHeader() *DeploymentHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DeploymentDescription) GetState() DeploymentState {
	if x != nil {
		return x.State
	}
	return DeploymentState_CREATED
}

func (x *DeploymentDescription) GetStateDetail() DeploymentStateDetail {
	if x != nil {
		return x.StateDetail
	}
	return DeploymentStateDetail_NONE
}

func (x *DeploymentDescription) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *DeploymentDescription) GetValidationStartTime() uint64 {
	if x != nil {
		return x.ValidationStartTime
	}
	return 0
}

func (x *DeploymentDescription) GetBuildStartTime() uint64 {
	if x != nil {
		return x.BuildStartTime
	}
	return 0
}

func (x *DeploymentDescription) GetDeployStartTime() uint64 {
	if x != nil {
		return x.DeployStartTime
	}
	return 0
}

func (x *DeploymentDescription) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type CreateDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// deployment header
	Header *DeploymentHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *CreateDeploymentRequest) Reset() {
	*x = CreateDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeploymentRequest) ProtoMessage() {}

func (x *CreateDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeploymentRequest.ProtoReflect.Descriptor instead.
func (*CreateDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{44}
}

func (x *CreateDeploymentRequest) GetHeader() *DeploymentHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type CreateDeploymentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// a unique identifier associated with this deployment
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateDeploymentReply) Reset() {
	*x = CreateDeploymentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeploymentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeploymentReply) ProtoMessage() {}

func (x *CreateDeploymentReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeploymentReply.ProtoReflect.Descriptor instead.
func (*CreateDeploymentReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{45}
}

func (x *CreateDeploymentReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CreateDeploymentReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListDeploymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a project/environment tuple
	ProjEnvHeader *ProjEnvHeader `protobuf:"bytes,1,opt,name=projEnvHeader,proto3" json:"projEnvHeader,omitempty"`
}

func (x *ListDeploymentsRequest) Reset() {
	*x = ListDeploymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeploymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeploymentsRequest) ProtoMessage() {}

func (x *ListDeploymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeploymentsRequest.ProtoReflect.Descriptor instead.
func (*ListDeploymentsRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{46}
}

func (x *ListDeploymentsRequest) GetProjEnvHeader() *ProjEnvHeader {
	if x != nil {
		return x.ProjEnvHeader
	}
	return nil
}

type ListDeploymentsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// list of unique identifiers associated with each deployment
	Ids []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ListDeploymentsReply) Reset() {
	*x = ListDeploymentsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeploymentsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeploymentsReply) ProtoMessage() {}

func (x *ListDeploymentsReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeploymentsReply.ProtoReflect.Descriptor instead.
func (*ListDeploymentsReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{47}
}

func (x *ListDeploymentsReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListDeploymentsReply) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DescribeDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a unique identifier associated with this deployment
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DescribeDeploymentRequest) Reset() {
	*x = DescribeDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDeploymentRequest) ProtoMessage() {}

func (x *DescribeDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDeploymentRequest.ProtoReflect.Descriptor instead.
func (*DescribeDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{48}
}

func (x *DescribeDeploymentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DescribeDeploymentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// deployment description
	Desc *DeploymentDescription `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *DescribeDeploymentReply) Reset() {
	*x = DescribeDeploymentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDeploymentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDeploymentReply) ProtoMessage() {}

func (x *DescribeDeploymentReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDeploymentReply.ProtoReflect.Descriptor instead.
func (*DescribeDeploymentReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{49}
}

func (x *DescribeDeploymentReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DescribeDeploymentReply) GetDesc() *DeploymentDescription {
	if x != nil {
		return x.Desc
	}
	return nil
}

type PackageDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageId string `protobuf:"bytes,2,opt,name=packageId,proto3" json:"packageId,omitempty"` // pkg-<hex string of first 4 bytes of packageXsum>
	ProjId    string `protobuf:"bytes,7,opt,name=projId,proto3" json:"projId,omitempty"`       // project id associated with this package
	// package state
	State PackageState `protobuf:"varint,8,opt,name=state,proto3,enum=PackageState" json:"state,omitempty"`
	// time the package was first uploaded expressed as the number of seconds since
	// Jan 1, 1970 00:00:00 UTC
	UploadTime  uint64 `protobuf:"varint,9,opt,name=uploadTime,proto3" json:"uploadTime,omitempty"`
	PackageSize uint64 `protobuf:"varint,10,opt,name=packageSize,proto3" json:"packageSize,omitempty"` // size of the compressed package in bytes
}

func (x *PackageDescription) Reset() {
	*x = PackageDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageDescription) ProtoMessage() {}

func (x *PackageDescription) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageDescription.ProtoReflect.Descriptor instead.
func (*PackageDescription) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{50}
}

func (x *PackageDescription) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

func (x *PackageDescription) GetProjId() string {
	if x != nil {
		return x.ProjId
	}
	return ""
}

func (x *PackageDescription) GetState() PackageState {
	if x != nil {
		return x.State
	}
	return PackageState_UPLOADING
}

func (x *PackageDescription) GetUploadTime() uint64 {
	if x != nil {
		return x.UploadTime
	}
	return 0
}

func (x *PackageDescription) GetPackageSize() uint64 {
	if x != nil {
		return x.PackageSize
	}
	return 0
}

type UploadPackageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjId      string `protobuf:"bytes,1,opt,name=projId,proto3" json:"projId,omitempty"`           // project id associated with this package
	PackageXsum []byte `protobuf:"bytes,2,opt,name=packageXsum,proto3" json:"packageXsum,omitempty"` // sha256 checksum of packageTarballData
	// packageTarballData and packageTarballURL are mutually exclusive
	PackageTarballData []byte `protobuf:"bytes,3,opt,name=packageTarballData,proto3" json:"packageTarballData,omitempty"` // package tarball content in .tar.xz format (limited to 6MiB);
	PackageTarballURL  string `protobuf:"bytes,4,opt,name=packageTarballURL,proto3" json:"packageTarballURL,omitempty"`   // URL to package tarball (when larger than 6MiB)
}

func (x *UploadPackageRequest) Reset() {
	*x = UploadPackageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPackageRequest) ProtoMessage() {}

func (x *UploadPackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPackageRequest.ProtoReflect.Descriptor instead.
func (*UploadPackageRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{51}
}

func (x *UploadPackageRequest) GetProjId() string {
	if x != nil {
		return x.ProjId
	}
	return ""
}

func (x *UploadPackageRequest) GetPackageXsum() []byte {
	if x != nil {
		return x.PackageXsum
	}
	return nil
}

func (x *UploadPackageRequest) GetPackageTarballData() []byte {
	if x != nil {
		return x.PackageTarballData
	}
	return nil
}

func (x *UploadPackageRequest) GetPackageTarballURL() string {
	if x != nil {
		return x.PackageTarballURL
	}
	return ""
}

type UploadPackageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	PkgId  string               `protobuf:"bytes,2,opt,name=pkgId,proto3" json:"pkgId,omitempty"` // package id associated with this package
}

func (x *UploadPackageReply) Reset() {
	*x = UploadPackageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPackageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPackageReply) ProtoMessage() {}

func (x *UploadPackageReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPackageReply.ProtoReflect.Descriptor instead.
func (*UploadPackageReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{52}
}

func (x *UploadPackageReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UploadPackageReply) GetPkgId() string {
	if x != nil {
		return x.PkgId
	}
	return ""
}

type DescribePackageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageId string `protobuf:"bytes,1,opt,name=packageId,proto3" json:"packageId,omitempty"`
}

func (x *DescribePackageRequest) Reset() {
	*x = DescribePackageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribePackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribePackageRequest) ProtoMessage() {}

func (x *DescribePackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribePackageRequest.ProtoReflect.Descriptor instead.
func (*DescribePackageRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{53}
}

func (x *DescribePackageRequest) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

type DescribePackageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	Desc   *PackageDescription  `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *DescribePackageReply) Reset() {
	*x = DescribePackageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribePackageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribePackageReply) ProtoMessage() {}

func (x *DescribePackageReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribePackageReply.ProtoReflect.Descriptor instead.
func (*DescribePackageReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{54}
}

func (x *DescribePackageReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DescribePackageReply) GetDesc() *PackageDescription {
	if x != nil {
		return x.Desc
	}
	return nil
}

type ListPackagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjId string `protobuf:"bytes,2,opt,name=projId,proto3" json:"projId,omitempty"` // leave empty for all projects
}

func (x *ListPackagesRequest) Reset() {
	*x = ListPackagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPackagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPackagesRequest) ProtoMessage() {}

func (x *ListPackagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPackagesRequest.ProtoReflect.Descriptor instead.
func (*ListPackagesRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{55}
}

func (x *ListPackagesRequest) GetProjId() string {
	if x != nil {
		return x.ProjId
	}
	return ""
}

type ListPackagesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult                  `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Items  []*ListPackagesReply_ListPackagesItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListPackagesReply) Reset() {
	*x = ListPackagesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPackagesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPackagesReply) ProtoMessage() {}

func (x *ListPackagesReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPackagesReply.ProtoReflect.Descriptor instead.
func (*ListPackagesReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{56}
}

func (x *ListPackagesReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListPackagesReply) GetItems() []*ListPackagesReply_ListPackagesItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type DeletePackageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageId string `protobuf:"bytes,1,opt,name=packageId,proto3" json:"packageId,omitempty"`
}

func (x *DeletePackageRequest) Reset() {
	*x = DeletePackageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePackageRequest) ProtoMessage() {}

func (x *DeletePackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePackageRequest.ProtoReflect.Descriptor instead.
func (*DeletePackageRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{57}
}

func (x *DeletePackageRequest) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

type DeletePackageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	State  PackageState         `protobuf:"varint,1,opt,name=state,proto3,enum=PackageState" json:"state,omitempty"`
}

func (x *DeletePackageReply) Reset() {
	*x = DeletePackageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePackageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePackageReply) ProtoMessage() {}

func (x *DeletePackageReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePackageReply.ProtoReflect.Descriptor instead.
func (*DeletePackageReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{58}
}

func (x *DeletePackageReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DeletePackageReply) GetState() PackageState {
	if x != nil {
		return x.State
	}
	return PackageState_UPLOADING
}

type GetUploadURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetUploadURLRequest) Reset() {
	*x = GetUploadURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUploadURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadURLRequest) ProtoMessage() {}

func (x *GetUploadURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadURLRequest.ProtoReflect.Descriptor instead.
func (*GetUploadURLRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{59}
}

func (x *GetUploadURLRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetUploadURLReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ServiceRunnerResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	URL    string               `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (x *GetUploadURLReply) Reset() {
	*x = GetUploadURLReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUploadURLReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadURLReply) ProtoMessage() {}

func (x *GetUploadURLReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadURLReply.ProtoReflect.Descriptor instead.
func (*GetUploadURLReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{60}
}

func (x *GetUploadURLReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetUploadURLReply) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type GetLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjId string `protobuf:"bytes,6,opt,name=projId,proto3" json:"projId,omitempty"` // project id
	EnvId  string `protobuf:"bytes,7,opt,name=envId,proto3" json:"envId,omitempty"`   // environment id
	// optional; can leave empty for all services otherwise name of a service defined within the Bopmatic project
	ServiceName string `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	StartTime   uint64 `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"` // earliest log message to retrieve expressed as the number
	// of seconds since Jan 1, 1970 00:00:00 UTC
	EndTime uint64 `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"` // latest log message to retrieve expressed as the number of
}

func (x *GetLogsRequest) Reset() {
	*x = GetLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsRequest) ProtoMessage() {}

func (x *GetLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsRequest.ProtoReflect.Descriptor instead.
func (*GetLogsRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{61}
}

func (x *GetLogsRequest) GetProjId() string {
	if x != nil {
		return x.ProjId
	}
	return ""
}

func (x *GetLogsRequest) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *GetLogsRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *GetLogsRequest) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetLogsRequest) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type GetLogsEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // timestamp of the log message expressed as the number of
	// seconds since Jan 1, 1970 00:00:00 UTC
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // log message
}

func (x *GetLogsEntry) Reset() {
	*x = GetLogsEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsEntry) ProtoMessage() {}

func (x *GetLogsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsEntry.ProtoReflect.Descriptor instead.
func (*GetLogsEntry) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{62}
}

func (x *GetLogsEntry) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetLogsEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetLogsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *ServiceRunnerResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Entries []*GetLogsEntry      `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *GetLogsReply) Reset() {
	*x = GetLogsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsReply) ProtoMessage() {}

func (x *GetLogsReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsReply.ProtoReflect.Descriptor instead.
func (*GetLogsReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{63}
}

func (x *GetLogsReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetLogsReply) GetEntries() []*GetLogsEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ListMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope MetricsScope `protobuf:"varint,1,opt,name=scope,proto3,enum=MetricsScope" json:"scope,omitempty"` // the scope of the returned metrics names; e.g. all or limited to 1 entity class
}

func (x *ListMetricsRequest) Reset() {
	*x = ListMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsRequest) ProtoMessage() {}

func (x *ListMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListMetricsRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{64}
}

func (x *ListMetricsRequest) GetScope() MetricsScope {
	if x != nil {
		return x.Scope
	}
	return MetricsScope_METRIC_SCOPE_ALL
}

type ListMetricsEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                  // the name of the metric
	Description  string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`    // a description of the metric
	SamplePeriod uint64 `protobuf:"varint,3,opt,name=samplePeriod,proto3" json:"samplePeriod,omitempty"` // the duration of each period the metric is sampled in seconds
}

func (x *ListMetricsEntry) Reset() {
	*x = ListMetricsEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsEntry) ProtoMessage() {}

func (x *ListMetricsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsEntry.ProtoReflect.Descriptor instead.
func (*ListMetricsEntry) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{65}
}

func (x *ListMetricsEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListMetricsEntry) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListMetricsEntry) GetSamplePeriod() uint64 {
	if x != nil {
		return x.SamplePeriod
	}
	return 0
}

type ListMetricsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Entries []*ListMetricsEntry  `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *ListMetricsReply) Reset() {
	*x = ListMetricsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsReply) ProtoMessage() {}

func (x *ListMetricsReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsReply.ProtoReflect.Descriptor instead.
func (*ListMetricsReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{66}
}

func (x *ListMetricsReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListMetricsReply) GetEntries() []*ListMetricsEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type GetMetricSamplesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjId string       `protobuf:"bytes,1,opt,name=projId,proto3" json:"projId,omitempty"`                  // project id
	EnvId  string       `protobuf:"bytes,2,opt,name=envId,proto3" json:"envId,omitempty"`                    // environment id
	Scope  MetricsScope `protobuf:"varint,3,opt,name=scope,proto3,enum=MetricsScope" json:"scope,omitempty"` // the scope of the metrics query; e.g. all or limited to 1 entity class
	// optional; can leave empty for all entities in a given scope class or set to a specific entity to retrieve metrics from only that entity. for example, to retrieve only the metrics
	// related to a database named 'foo', set scope=METRIC_SCOPE_DATABASE and
	// scopeQualifier='foo'
	ScopeQualifier string `protobuf:"bytes,4,opt,name=scopeQualifier,proto3" json:"scopeQualifier,omitempty"`
	// optional; list of metric names to retrieve; can leave empty for all
	MetricNames []string `protobuf:"bytes,5,rep,name=metricNames,proto3" json:"metricNames,omitempty"`
	StartTime   uint64   `protobuf:"varint,6,opt,name=startTime,proto3" json:"startTime,omitempty"` // earliest metric to retrieve expressed as the number
	// of seconds since Jan 1, 1970 00:00:00 UTC
	EndTime uint64 `protobuf:"varint,7,opt,name=endTime,proto3" json:"endTime,omitempty"` // latest metric to retrieve expressed as the number of
	// seconds since Jan 1, 1970 00:00:00 UTC
	Format MetricsFormat `protobuf:"varint,8,opt,name=format,proto3,enum=MetricsFormat" json:"format,omitempty"` // desired output format of the retrieved metrics
}

func (x *GetMetricSamplesRequest) Reset() {
	*x = GetMetricSamplesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricSamplesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricSamplesRequest) ProtoMessage() {}

func (x *GetMetricSamplesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricSamplesRequest.ProtoReflect.Descriptor instead.
func (*GetMetricSamplesRequest) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{67}
}

func (x *GetMetricSamplesRequest) GetProjId() string {
	if x != nil {
		return x.ProjId
	}
	return ""
}

func (x *GetMetricSamplesRequest) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *GetMetricSamplesRequest) GetScope() MetricsScope {
	if x != nil {
		return x.Scope
	}
	return MetricsScope_METRIC_SCOPE_ALL
}

func (x *GetMetricSamplesRequest) GetScopeQualifier() string {
	if x != nil {
		return x.ScopeQualifier
	}
	return ""
}

func (x *GetMetricSamplesRequest) GetMetricNames() []string {
	if x != nil {
		return x.MetricNames
	}
	return nil
}

func (x *GetMetricSamplesRequest) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetMetricSamplesRequest) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetMetricSamplesRequest) GetFormat() MetricsFormat {
	if x != nil {
		return x.Format
	}
	return MetricsFormat_METRIC_FORMAT_OPENMETRICS
}

type GetMetricSamplesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *ServiceRunnerResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	MetricBuf string               `protobuf:"bytes,2,opt,name=metricBuf,proto3" json:"metricBuf,omitempty"` // the requested metrics in the specified output format
}

func (x *GetMetricSamplesReply) Reset() {
	*x = GetMetricSamplesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricSamplesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricSamplesReply) ProtoMessage() {}

func (x *GetMetricSamplesReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricSamplesReply.ProtoReflect.Descriptor instead.
func (*GetMetricSamplesReply) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{68}
}

func (x *GetMetricSamplesReply) GetResult() *ServiceRunnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetMetricSamplesReply) GetMetricBuf() string {
	if x != nil {
		return x.MetricBuf
	}
	return ""
}

type ListPackagesReply_ListPackagesItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjId    string `protobuf:"bytes,3,opt,name=projId,proto3" json:"projId,omitempty"`
	PackageId string `protobuf:"bytes,2,opt,name=packageId,proto3" json:"packageId,omitempty"`
}

func (x *ListPackagesReply_ListPackagesItem) Reset() {
	*x = ListPackagesReply_ListPackagesItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_sr_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPackagesReply_ListPackagesItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPackagesReply_ListPackagesItem) ProtoMessage() {}

func (x *ListPackagesReply_ListPackagesItem) ProtoReflect() protoreflect.Message {
	mi := &file_pb_sr_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPackagesReply_ListPackagesItem.ProtoReflect.Descriptor instead.
func (*ListPackagesReply_ListPackagesItem) Descriptor() ([]byte, []int) {
	return file_pb_sr_proto_rawDescGZIP(), []int{56, 0}
}

func (x *ListPackagesReply_ListPackagesItem) GetProjId() string {
	if x != nil {
		return x.ProjId
	}
	return ""
}

func (x *ListPackagesReply_ListPackagesItem) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

var File_pb_sr_proto protoreflect.FileDescriptor

var file_pb_sr_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x62, 0x2f, 0x73, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x67, 0x0a,
	0x13, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x5f, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x6e, 0x73, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x6e, 0x73, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6e, 0x73,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6e,
	0x73, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xe7, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x10, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x64,
	0x73, 0x22, 0x3e, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x22, 0x52, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x1b, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x53,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6d, 0x0a,
	0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x45, 0x0a, 0x11,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6e, 0x73, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6e, 0x73, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x22, 0xca, 0x01, 0x0a, 0x16, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x64, 0x73,
	0x22, 0x46, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x56, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x16,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x1f, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a,
	0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x57, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2c,
	0x0a, 0x1a, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x75, 0x0a, 0x18,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x22, 0x3d, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6a, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6a, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x76,
	0x49, 0x64, 0x22, 0x4b, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22,
	0x9b, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6a,
	0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x69, 0x74,
	0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x69, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x3d, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x8d, 0x01, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x26, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x0d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x09, 0x73, 0x76, 0x63, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x09, 0x73, 0x76, 0x63, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x66, 0x0a,
	0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x09, 0x73, 0x76, 0x63, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x09, 0x73, 0x76, 0x63, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x70, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x70, 0x63, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x6d, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x22, 0x3f, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x93, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x6d, 0x0a, 0x0f, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x34,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x18, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x22, 0xac, 0x01, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6e, 0x75, 0x6d,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x49, 0x6e, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x22, 0x71, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x22, 0x3e, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x6a, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x17, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37,
	0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x6e, 0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37,
	0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x6f, 0x0a, 0x15, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0xaf, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x6b, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6b,
	0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6a, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6a, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6e, 0x76, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xf2, 0x02, 0x0a, 0x15, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x26, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x30, 0x0a, 0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x44, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x45, 0x6e,
	0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x70,
	0x72, 0x6f, 0x6a, 0x45, 0x6e, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x56, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0x2b, 0x0a, 0x19, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x73, 0x0a, 0x17, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0xcf, 0x01, 0x0a, 0x12, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x72, 0x6f, 0x6a, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f,
	0x6a, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02,
	0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x05,
	0x10, 0x06, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x22, 0xae, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6a, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x58, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x58, 0x73, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x12, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x61, 0x72, 0x62, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x54, 0x61, 0x72, 0x62, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x11, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x61, 0x72, 0x62, 0x61, 0x6c, 0x6c, 0x55, 0x52, 0x4c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54,
	0x61, 0x72, 0x62, 0x61, 0x6c, 0x6c, 0x55, 0x52, 0x4c, 0x22, 0x58, 0x0a, 0x12, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x6b, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6b,
	0x67, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x14, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03,
	0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x33, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6a, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6a, 0x49, 0x64, 0x4a, 0x04, 0x08, 0x01, 0x10,
	0x02, 0x22, 0xcc, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x1a, 0x4e, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6a, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6a, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02,
	0x22, 0x34, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x27, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x53, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x22, 0xa4, 0x01,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6a, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x72, 0x6f, 0x6a, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x76, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04,
	0x08, 0x03, 0x10, 0x04, 0x22, 0x46, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x65, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x22, 0x39, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x6c,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x6d, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2b,
	0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x96, 0x02, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6a, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6a, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x22, 0x63, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x42, 0x75, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x42, 0x75, 0x66, 0x2a, 0xb4, 0x01, 0x0a, 0x13, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x44, 0x4e, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54, 0x10, 0x02, 0x12,
	0x1d, 0x0a, 0x19, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x43, 0x54, 0x5f, 0x4c,
	0x49, 0x4d, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x03, 0x12, 0x11,
	0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10,
	0x04, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0xff, 0xff, 0xff, 0xff, 0x07,
	0x2a, 0x28, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x2a, 0x75, 0x0a, 0x0e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b,
	0x4e, 0x45, 0x57, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x45, 0x4e, 0x56, 0x5f, 0x54, 0x45, 0x41, 0x52, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x46, 0x5f, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0xff, 0xff, 0xff, 0xff,
	0x07, 0x2a, 0x4d, 0x0a, 0x13, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x55, 0x53, 0x54,
	0x4f, 0x4d, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x44,
	0x45, 0x50, 0x4c, 0x4f, 0x59, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0xff, 0xff, 0xff, 0xff, 0x07,
	0x2a, 0x8c, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x50, 0x4c, 0x59, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41,
	0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x50, 0x4c, 0x59, 0x5f, 0x42,
	0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x50,
	0x4c, 0x4f, 0x59, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x05, 0x12, 0x1c, 0x0a, 0x14, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x44, 0x45, 0x50,
	0x4c, 0x4f, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0xff, 0xff, 0xff, 0xff, 0x07, 0x2a,
	0x7e, 0x0a, 0x15, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x4b, 0x47, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4c, 0x44, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x50, 0x4c, 0x59, 0x5f, 0x53, 0x55, 0x50,
	0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4e, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x03, 0x12, 0x20, 0x0a,
	0x18, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x54, 0x10, 0xff, 0xff, 0xff, 0xff, 0x07, 0x2a,
	0xc1, 0x01, 0x0a, 0x0c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0d, 0x0a, 0x09, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x50, 0x4b, 0x47, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x03, 0x12, 0x10,
	0x0a, 0x0c, 0x50, 0x4b, 0x47, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x04,
	0x12, 0x16, 0x0a, 0x12, 0x50, 0x4b, 0x47, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x4e, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x55, 0x49, 0x4c, 0x54, 0x10, 0x0b,
	0x12, 0x19, 0x0a, 0x11, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x50, 0x4b, 0x47, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0xff, 0xff, 0xff, 0xff, 0x07, 0x22, 0x04, 0x08, 0x05, 0x10,
	0x05, 0x22, 0x04, 0x08, 0x06, 0x10, 0x06, 0x22, 0x04, 0x08, 0x07, 0x10, 0x07, 0x22, 0x04, 0x08,
	0x08, 0x10, 0x08, 0x2a, 0x93, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x5f, 0x53,
	0x43, 0x4f, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x45,
	0x54, 0x52, 0x49, 0x43, 0x5f, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49,
	0x43, 0x45, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x5f, 0x53,
	0x43, 0x4f, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x10, 0x02,
	0x12, 0x19, 0x0a, 0x15, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x5f, 0x53, 0x43, 0x4f, 0x50, 0x45,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x14, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x5f, 0x53, 0x43,
	0x4f, 0x50, 0x45, 0x10, 0xff, 0xff, 0xff, 0xff, 0x07, 0x2a, 0x4d, 0x0a, 0x0d, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x45,
	0x54, 0x52, 0x49, 0x43, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x4e,
	0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x53, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x15, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x5f, 0x46, 0x4f, 0x52, 0x4d,
	0x41, 0x54, 0x10, 0xff, 0xff, 0xff, 0xff, 0x07, 0x32, 0xd2, 0x0d, 0x0a, 0x0d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x15, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x15, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x17, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x53, 0x69, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x11, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x19, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x46, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x18, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x12, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x17, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x15, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x15, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x52, 0x4c, 0x12, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x2b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x13, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x1f, 0x5a,
	0x1d, 0x62, 0x6f, 0x70, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_sr_proto_rawDescOnce sync.Once
	file_pb_sr_proto_rawDescData = file_pb_sr_proto_rawDesc
)

func file_pb_sr_proto_rawDescGZIP() []byte {
	file_pb_sr_proto_rawDescOnce.Do(func() {
		file_pb_sr_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_sr_proto_rawDescData)
	})
	return file_pb_sr_proto_rawDescData
}

var file_pb_sr_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_pb_sr_proto_msgTypes = make([]protoimpl.MessageInfo, 70)
var file_pb_sr_proto_goTypes = []any{
	(ServiceRunnerStatus)(0),                   // 0: ServiceRunnerStatus
	(ProjectState)(0),                          // 1: ProjectState
	(DeploymentType)(0),                        // 2: DeploymentType
	(DeploymentInitiator)(0),                   // 3: DeploymentInitiator
	(DeploymentState)(0),                       // 4: DeploymentState
	(DeploymentStateDetail)(0),                 // 5: DeploymentStateDetail
	(PackageState)(0),                          // 6: PackageState
	(MetricsScope)(0),                          // 7: MetricsScope
	(MetricsFormat)(0),                         // 8: MetricsFormat
	(*ServiceRunnerResult)(nil),                // 9: ServiceRunnerResult
	(*ProjectHeader)(nil),                      // 10: ProjectHeader
	(*ProjectDescription)(nil),                 // 11: ProjectDescription
	(*CreateProjectRequest)(nil),               // 12: CreateProjectRequest
	(*CreateProjectReply)(nil),                 // 13: CreateProjectReply
	(*DeleteProjectRequest)(nil),               // 14: DeleteProjectRequest
	(*DeleteProjectReply)(nil),                 // 15: DeleteProjectReply
	(*ListProjectsRequest)(nil),                // 16: ListProjectsRequest
	(*ListProjectsReply)(nil),                  // 17: ListProjectsReply
	(*DescribeProjectRequest)(nil),             // 18: DescribeProjectRequest
	(*DescribeProjectReply)(nil),               // 19: DescribeProjectReply
	(*EnvironmentHeader)(nil),                  // 20: EnvironmentHeader
	(*EnvironmentDescription)(nil),             // 21: EnvironmentDescription
	(*CreateEnvironmentRequest)(nil),           // 22: CreateEnvironmentRequest
	(*CreateEnvironmentReply)(nil),             // 23: CreateEnvironmentReply
	(*DeleteEnvironmentRequest)(nil),           // 24: DeleteEnvironmentRequest
	(*DeleteEnvironmentReply)(nil),             // 25: DeleteEnvironmentReply
	(*ListEnvironmentsRequest)(nil),            // 26: ListEnvironmentsRequest
	(*ListEnvironmentsReply)(nil),              // 27: ListEnvironmentsReply
	(*DescribeEnvironmentRequest)(nil),         // 28: DescribeEnvironmentRequest
	(*DescribeEnvironmentReply)(nil),           // 29: DescribeEnvironmentReply
	(*ProjEnvHeader)(nil),                      // 30: ProjEnvHeader
	(*DescribeSiteRequest)(nil),                // 31: DescribeSiteRequest
	(*DescribeSiteReply)(nil),                  // 32: DescribeSiteReply
	(*ListServicesRequest)(nil),                // 33: ListServicesRequest
	(*ListServicesReply)(nil),                  // 34: ListServicesReply
	(*ServiceHeader)(nil),                      // 35: ServiceHeader
	(*DescribeServiceRequest)(nil),             // 36: DescribeServiceRequest
	(*ServiceDescription)(nil),                 // 37: ServiceDescription
	(*DescribeServiceReply)(nil),               // 38: DescribeServiceReply
	(*ListDatastoresRequest)(nil),              // 39: ListDatastoresRequest
	(*ListDatastoresReply)(nil),                // 40: ListDatastoresReply
	(*DatastoreHeader)(nil),                    // 41: DatastoreHeader
	(*DescribeDatastoreRequest)(nil),           // 42: DescribeDatastoreRequest
	(*DatastoreDescription)(nil),               // 43: DatastoreDescription
	(*DescribeDatastoreReply)(nil),             // 44: DescribeDatastoreReply
	(*ListDatabasesRequest)(nil),               // 45: ListDatabasesRequest
	(*ListDatabasesReply)(nil),                 // 46: ListDatabasesReply
	(*DatabaseHeader)(nil),                     // 47: DatabaseHeader
	(*DescribeDatabaseRequest)(nil),            // 48: DescribeDatabaseRequest
	(*DatabaseDescription)(nil),                // 49: DatabaseDescription
	(*DescribeDatabaseReply)(nil),              // 50: DescribeDatabaseReply
	(*DeploymentHeader)(nil),                   // 51: DeploymentHeader
	(*DeploymentDescription)(nil),              // 52: DeploymentDescription
	(*CreateDeploymentRequest)(nil),            // 53: CreateDeploymentRequest
	(*CreateDeploymentReply)(nil),              // 54: CreateDeploymentReply
	(*ListDeploymentsRequest)(nil),             // 55: ListDeploymentsRequest
	(*ListDeploymentsReply)(nil),               // 56: ListDeploymentsReply
	(*DescribeDeploymentRequest)(nil),          // 57: DescribeDeploymentRequest
	(*DescribeDeploymentReply)(nil),            // 58: DescribeDeploymentReply
	(*PackageDescription)(nil),                 // 59: PackageDescription
	(*UploadPackageRequest)(nil),               // 60: UploadPackageRequest
	(*UploadPackageReply)(nil),                 // 61: UploadPackageReply
	(*DescribePackageRequest)(nil),             // 62: DescribePackageRequest
	(*DescribePackageReply)(nil),               // 63: DescribePackageReply
	(*ListPackagesRequest)(nil),                // 64: ListPackagesRequest
	(*ListPackagesReply)(nil),                  // 65: ListPackagesReply
	(*DeletePackageRequest)(nil),               // 66: DeletePackageRequest
	(*DeletePackageReply)(nil),                 // 67: DeletePackageReply
	(*GetUploadURLRequest)(nil),                // 68: GetUploadURLRequest
	(*GetUploadURLReply)(nil),                  // 69: GetUploadURLReply
	(*GetLogsRequest)(nil),                     // 70: GetLogsRequest
	(*GetLogsEntry)(nil),                       // 71: GetLogsEntry
	(*GetLogsReply)(nil),                       // 72: GetLogsReply
	(*ListMetricsRequest)(nil),                 // 73: ListMetricsRequest
	(*ListMetricsEntry)(nil),                   // 74: ListMetricsEntry
	(*ListMetricsReply)(nil),                   // 75: ListMetricsReply
	(*GetMetricSamplesRequest)(nil),            // 76: GetMetricSamplesRequest
	(*GetMetricSamplesReply)(nil),              // 77: GetMetricSamplesReply
	(*ListPackagesReply_ListPackagesItem)(nil), // 78: ListPackagesReply.ListPackagesItem
}
var file_pb_sr_proto_depIdxs = []int32{
	0,  // 0: ServiceRunnerResult.status:type_name -> ServiceRunnerStatus
	10, // 1: ProjectDescription.header:type_name -> ProjectHeader
	1,  // 2: ProjectDescription.state:type_name -> ProjectState
	10, // 3: CreateProjectRequest.header:type_name -> ProjectHeader
	9,  // 4: CreateProjectReply.result:type_name -> ServiceRunnerResult
	9,  // 5: DeleteProjectReply.result:type_name -> ServiceRunnerResult
	9,  // 6: ListProjectsReply.result:type_name -> ServiceRunnerResult
	9,  // 7: DescribeProjectReply.result:type_name -> ServiceRunnerResult
	11, // 8: DescribeProjectReply.desc:type_name -> ProjectDescription
	20, // 9: EnvironmentDescription.header:type_name -> EnvironmentHeader
	20, // 10: CreateEnvironmentRequest.header:type_name -> EnvironmentHeader
	9,  // 11: CreateEnvironmentReply.result:type_name -> ServiceRunnerResult
	9,  // 12: DeleteEnvironmentReply.result:type_name -> ServiceRunnerResult
	9,  // 13: ListEnvironmentsReply.result:type_name -> ServiceRunnerResult
	9,  // 14: DescribeEnvironmentReply.result:type_name -> ServiceRunnerResult
	21, // 15: DescribeEnvironmentReply.desc:type_name -> EnvironmentDescription
	30, // 16: DescribeSiteRequest.projEnvHeader:type_name -> ProjEnvHeader
	9,  // 17: DescribeSiteReply.result:type_name -> ServiceRunnerResult
	30, // 18: DescribeSiteReply.projEnvHeader:type_name -> ProjEnvHeader
	30, // 19: ListServicesRequest.header:type_name -> ProjEnvHeader
	9,  // 20: ListServicesReply.result:type_name -> ServiceRunnerResult
	30, // 21: ListServicesReply.header:type_name -> ProjEnvHeader
	30, // 22: ServiceHeader.projEnvHeader:type_name -> ProjEnvHeader
	35, // 23: DescribeServiceRequest.svcHeader:type_name -> ServiceHeader
	35, // 24: ServiceDescription.svcHeader:type_name -> ServiceHeader
	9,  // 25: DescribeServiceReply.result:type_name -> ServiceRunnerResult
	37, // 26: DescribeServiceReply.desc:type_name -> ServiceDescription
	30, // 27: ListDatastoresRequest.header:type_name -> ProjEnvHeader
	9,  // 28: ListDatastoresReply.result:type_name -> ServiceRunnerResult
	30, // 29: ListDatastoresReply.header:type_name -> ProjEnvHeader
	30, // 30: DatastoreHeader.projEnvHeader:type_name -> ProjEnvHeader
	41, // 31: DescribeDatastoreRequest.datastoreHeader:type_name -> DatastoreHeader
	41, // 32: DatastoreDescription.datastoreHeader:type_name -> DatastoreHeader
	9,  // 33: DescribeDatastoreReply.result:type_name -> ServiceRunnerResult
	43, // 34: DescribeDatastoreReply.desc:type_name -> DatastoreDescription
	30, // 35: ListDatabasesRequest.header:type_name -> ProjEnvHeader
	9,  // 36: ListDatabasesReply.result:type_name -> ServiceRunnerResult
	30, // 37: ListDatabasesReply.header:type_name -> ProjEnvHeader
	30, // 38: DatabaseHeader.projEnvHeader:type_name -> ProjEnvHeader
	47, // 39: DescribeDatabaseRequest.databaseHeader:type_name -> DatabaseHeader
	47, // 40: DatabaseDescription.databaseHeader:type_name -> DatabaseHeader
	9,  // 41: DescribeDatabaseReply.result:type_name -> ServiceRunnerResult
	49, // 42: DescribeDatabaseReply.desc:type_name -> DatabaseDescription
	2,  // 43: DeploymentHeader.type:type_name -> DeploymentType
	3,  // 44: DeploymentHeader.initiator:type_name -> DeploymentInitiator
	51, // 45: DeploymentDescription.header:type_name -> DeploymentHeader
	4,  // 46: DeploymentDescription.state:type_name -> DeploymentState
	5,  // 47: DeploymentDescription.stateDetail:type_name -> DeploymentStateDetail
	51, // 48: CreateDeploymentRequest.header:type_name -> DeploymentHeader
	9,  // 49: CreateDeploymentReply.result:type_name -> ServiceRunnerResult
	30, // 50: ListDeploymentsRequest.projEnvHeader:type_name -> ProjEnvHeader
	9,  // 51: ListDeploymentsReply.result:type_name -> ServiceRunnerResult
	9,  // 52: DescribeDeploymentReply.result:type_name -> ServiceRunnerResult
	52, // 53: DescribeDeploymentReply.desc:type_name -> DeploymentDescription
	6,  // 54: PackageDescription.state:type_name -> PackageState
	9,  // 55: UploadPackageReply.result:type_name -> ServiceRunnerResult
	9,  // 56: DescribePackageReply.result:type_name -> ServiceRunnerResult
	59, // 57: DescribePackageReply.desc:type_name -> PackageDescription
	9,  // 58: ListPackagesReply.result:type_name -> ServiceRunnerResult
	78, // 59: ListPackagesReply.items:type_name -> ListPackagesReply.ListPackagesItem
	9,  // 60: DeletePackageReply.result:type_name -> ServiceRunnerResult
	6,  // 61: DeletePackageReply.state:type_name -> PackageState
	9,  // 62: GetUploadURLReply.result:type_name -> ServiceRunnerResult
	9,  // 63: GetLogsReply.result:type_name -> ServiceRunnerResult
	71, // 64: GetLogsReply.entries:type_name -> GetLogsEntry
	7,  // 65: ListMetricsRequest.scope:type_name -> MetricsScope
	9,  // 66: ListMetricsReply.result:type_name -> ServiceRunnerResult
	74, // 67: ListMetricsReply.entries:type_name -> ListMetricsEntry
	7,  // 68: GetMetricSamplesRequest.scope:type_name -> MetricsScope
	8,  // 69: GetMetricSamplesRequest.format:type_name -> MetricsFormat
	9,  // 70: GetMetricSamplesReply.result:type_name -> ServiceRunnerResult
	12, // 71: ServiceRunner.CreateProject:input_type -> CreateProjectRequest
	14, // 72: ServiceRunner.DeleteProject:input_type -> DeleteProjectRequest
	16, // 73: ServiceRunner.ListProjects:input_type -> ListProjectsRequest
	18, // 74: ServiceRunner.DescribeProject:input_type -> DescribeProjectRequest
	22, // 75: ServiceRunner.CreateEnvironment:input_type -> CreateEnvironmentRequest
	24, // 76: ServiceRunner.DeleteEnvironment:input_type -> DeleteEnvironmentRequest
	26, // 77: ServiceRunner.ListEnvironments:input_type -> ListEnvironmentsRequest
	28, // 78: ServiceRunner.DescribeEnvironment:input_type -> DescribeEnvironmentRequest
	31, // 79: ServiceRunner.DescribeSite:input_type -> DescribeSiteRequest
	33, // 80: ServiceRunner.ListServices:input_type -> ListServicesRequest
	36, // 81: ServiceRunner.DescribeService:input_type -> DescribeServiceRequest
	39, // 82: ServiceRunner.ListDatastores:input_type -> ListDatastoresRequest
	42, // 83: ServiceRunner.DescribeDatastore:input_type -> DescribeDatastoreRequest
	45, // 84: ServiceRunner.ListDatabases:input_type -> ListDatabasesRequest
	48, // 85: ServiceRunner.DescribeDatabase:input_type -> DescribeDatabaseRequest
	53, // 86: ServiceRunner.CreateDeployment:input_type -> CreateDeploymentRequest
	55, // 87: ServiceRunner.ListDeployments:input_type -> ListDeploymentsRequest
	57, // 88: ServiceRunner.DescribeDeployment:input_type -> DescribeDeploymentRequest
	62, // 89: ServiceRunner.DescribePackage:input_type -> DescribePackageRequest
	66, // 90: ServiceRunner.DeletePackage:input_type -> DeletePackageRequest
	64, // 91: ServiceRunner.ListPackages:input_type -> ListPackagesRequest
	60, // 92: ServiceRunner.UploadPackage:input_type -> UploadPackageRequest
	68, // 93: ServiceRunner.GetUploadURL:input_type -> GetUploadURLRequest
	70, // 94: ServiceRunner.GetLogs:input_type -> GetLogsRequest
	73, // 95: ServiceRunner.ListMetrics:input_type -> ListMetricsRequest
	76, // 96: ServiceRunner.GetMetricSamples:input_type -> GetMetricSamplesRequest
	13, // 97: ServiceRunner.CreateProject:output_type -> CreateProjectReply
	15, // 98: ServiceRunner.DeleteProject:output_type -> DeleteProjectReply
	17, // 99: ServiceRunner.ListProjects:output_type -> ListProjectsReply
	19, // 100: ServiceRunner.DescribeProject:output_type -> DescribeProjectReply
	23, // 101: ServiceRunner.CreateEnvironment:output_type -> CreateEnvironmentReply
	25, // 102: ServiceRunner.DeleteEnvironment:output_type -> DeleteEnvironmentReply
	27, // 103: ServiceRunner.ListEnvironments:output_type -> ListEnvironmentsReply
	29, // 104: ServiceRunner.DescribeEnvironment:output_type -> DescribeEnvironmentReply
	32, // 105: ServiceRunner.DescribeSite:output_type -> DescribeSiteReply
	34, // 106: ServiceRunner.ListServices:output_type -> ListServicesReply
	38, // 107: ServiceRunner.DescribeService:output_type -> DescribeServiceReply
	40, // 108: ServiceRunner.ListDatastores:output_type -> ListDatastoresReply
	44, // 109: ServiceRunner.DescribeDatastore:output_type -> DescribeDatastoreReply
	46, // 110: ServiceRunner.ListDatabases:output_type -> ListDatabasesReply
	50, // 111: ServiceRunner.DescribeDatabase:output_type -> DescribeDatabaseReply
	54, // 112: ServiceRunner.CreateDeployment:output_type -> CreateDeploymentReply
	56, // 113: ServiceRunner.ListDeployments:output_type -> ListDeploymentsReply
	58, // 114: ServiceRunner.DescribeDeployment:output_type -> DescribeDeploymentReply
	63, // 115: ServiceRunner.DescribePackage:output_type -> DescribePackageReply
	67, // 116: ServiceRunner.DeletePackage:output_type -> DeletePackageReply
	65, // 117: ServiceRunner.ListPackages:output_type -> ListPackagesReply
	61, // 118: ServiceRunner.UploadPackage:output_type -> UploadPackageReply
	69, // 119: ServiceRunner.GetUploadURL:output_type -> GetUploadURLReply
	72, // 120: ServiceRunner.GetLogs:output_type -> GetLogsReply
	75, // 121: ServiceRunner.ListMetrics:output_type -> ListMetricsReply
	77, // 122: ServiceRunner.GetMetricSamples:output_type -> GetMetricSamplesReply
	97, // [97:123] is the sub-list for method output_type
	71, // [71:97] is the sub-list for method input_type
	71, // [71:71] is the sub-list for extension type_name
	71, // [71:71] is the sub-list for extension extendee
	0,  // [0:71] is the sub-list for field type_name
}

func init() { file_pb_sr_proto_init() }
func file_pb_sr_proto_init() {
	if File_pb_sr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_sr_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ServiceRunnerResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ProjectHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ProjectDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreateProjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteProjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ListProjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListProjectsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeProjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*EnvironmentHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*EnvironmentDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CreateEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CreateEnvironmentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteEnvironmentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ListEnvironmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ListEnvironmentsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeEnvironmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeEnvironmentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ProjEnvHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeSiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeSiteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ListServicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*ListServicesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*ServiceHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*ServiceDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeServiceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*ListDatastoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*ListDatastoresReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*DatastoreHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeDatastoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*DatastoreDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeDatastoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*ListDatabasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*ListDatabasesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*DatabaseHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeDatabaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*DatabaseDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeDatabaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*DeploymentHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*DeploymentDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDeploymentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*ListDeploymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*ListDeploymentsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeDeploymentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*PackageDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*UploadPackageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*UploadPackageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*DescribePackageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*DescribePackageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*ListPackagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*ListPackagesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*DeletePackageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*DeletePackageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*GetUploadURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*GetUploadURLReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*GetLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*GetLogsEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*GetLogsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*ListMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*ListMetricsEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*ListMetricsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*GetMetricSamplesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*GetMetricSamplesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_sr_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*ListPackagesReply_ListPackagesItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_sr_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   70,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_sr_proto_goTypes,
		DependencyIndexes: file_pb_sr_proto_depIdxs,
		EnumInfos:         file_pb_sr_proto_enumTypes,
		MessageInfos:      file_pb_sr_proto_msgTypes,
	}.Build()
	File_pb_sr_proto = out.File
	file_pb_sr_proto_rawDesc = nil
	file_pb_sr_proto_goTypes = nil
	file_pb_sr_proto_depIdxs = nil
}
