/*
pb/sr.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DescribeServiceReply type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeServiceReply{}

// DescribeServiceReply struct for DescribeServiceReply
type DescribeServiceReply struct {
	Result *ServiceRunnerResult `json:"result,omitempty"`
	Desc *ServiceDescription `json:"desc,omitempty"`
}

// NewDescribeServiceReply instantiates a new DescribeServiceReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeServiceReply() *DescribeServiceReply {
	this := DescribeServiceReply{}
	return &this
}

// NewDescribeServiceReplyWithDefaults instantiates a new DescribeServiceReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeServiceReplyWithDefaults() *DescribeServiceReply {
	this := DescribeServiceReply{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *DescribeServiceReply) GetResult() ServiceRunnerResult {
	if o == nil || IsNil(o.Result) {
		var ret ServiceRunnerResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeServiceReply) GetResultOk() (*ServiceRunnerResult, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *DescribeServiceReply) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given ServiceRunnerResult and assigns it to the Result field.
func (o *DescribeServiceReply) SetResult(v ServiceRunnerResult) {
	o.Result = &v
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *DescribeServiceReply) GetDesc() ServiceDescription {
	if o == nil || IsNil(o.Desc) {
		var ret ServiceDescription
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeServiceReply) GetDescOk() (*ServiceDescription, bool) {
	if o == nil || IsNil(o.Desc) {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *DescribeServiceReply) HasDesc() bool {
	if o != nil && !IsNil(o.Desc) {
		return true
	}

	return false
}

// SetDesc gets a reference to the given ServiceDescription and assigns it to the Desc field.
func (o *DescribeServiceReply) SetDesc(v ServiceDescription) {
	o.Desc = &v
}

func (o DescribeServiceReply) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeServiceReply) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Desc) {
		toSerialize["desc"] = o.Desc
	}
	return toSerialize, nil
}

type NullableDescribeServiceReply struct {
	value *DescribeServiceReply
	isSet bool
}

func (v NullableDescribeServiceReply) Get() *DescribeServiceReply {
	return v.value
}

func (v *NullableDescribeServiceReply) Set(val *DescribeServiceReply) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeServiceReply) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeServiceReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeServiceReply(val *DescribeServiceReply) *NullableDescribeServiceReply {
	return &NullableDescribeServiceReply{value: val, isSet: true}
}

func (v NullableDescribeServiceReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeServiceReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


