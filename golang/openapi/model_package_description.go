/*
pb/sr.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PackageDescription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PackageDescription{}

// PackageDescription struct for PackageDescription
type PackageDescription struct {
	ProjectName *string `json:"projectName,omitempty"`
	PackageId *string `json:"packageId,omitempty"`
	PackageXsum *string `json:"packageXsum,omitempty" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
	PackageTarballData *string `json:"packageTarballData,omitempty" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
	PackageTarballURL *string `json:"packageTarballURL,omitempty"`
}

// NewPackageDescription instantiates a new PackageDescription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackageDescription() *PackageDescription {
	this := PackageDescription{}
	return &this
}

// NewPackageDescriptionWithDefaults instantiates a new PackageDescription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackageDescriptionWithDefaults() *PackageDescription {
	this := PackageDescription{}
	return &this
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *PackageDescription) GetProjectName() string {
	if o == nil || IsNil(o.ProjectName) {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageDescription) GetProjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectName) {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *PackageDescription) HasProjectName() bool {
	if o != nil && !IsNil(o.ProjectName) {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *PackageDescription) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetPackageId returns the PackageId field value if set, zero value otherwise.
func (o *PackageDescription) GetPackageId() string {
	if o == nil || IsNil(o.PackageId) {
		var ret string
		return ret
	}
	return *o.PackageId
}

// GetPackageIdOk returns a tuple with the PackageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageDescription) GetPackageIdOk() (*string, bool) {
	if o == nil || IsNil(o.PackageId) {
		return nil, false
	}
	return o.PackageId, true
}

// HasPackageId returns a boolean if a field has been set.
func (o *PackageDescription) HasPackageId() bool {
	if o != nil && !IsNil(o.PackageId) {
		return true
	}

	return false
}

// SetPackageId gets a reference to the given string and assigns it to the PackageId field.
func (o *PackageDescription) SetPackageId(v string) {
	o.PackageId = &v
}

// GetPackageXsum returns the PackageXsum field value if set, zero value otherwise.
func (o *PackageDescription) GetPackageXsum() string {
	if o == nil || IsNil(o.PackageXsum) {
		var ret string
		return ret
	}
	return *o.PackageXsum
}

// GetPackageXsumOk returns a tuple with the PackageXsum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageDescription) GetPackageXsumOk() (*string, bool) {
	if o == nil || IsNil(o.PackageXsum) {
		return nil, false
	}
	return o.PackageXsum, true
}

// HasPackageXsum returns a boolean if a field has been set.
func (o *PackageDescription) HasPackageXsum() bool {
	if o != nil && !IsNil(o.PackageXsum) {
		return true
	}

	return false
}

// SetPackageXsum gets a reference to the given string and assigns it to the PackageXsum field.
func (o *PackageDescription) SetPackageXsum(v string) {
	o.PackageXsum = &v
}

// GetPackageTarballData returns the PackageTarballData field value if set, zero value otherwise.
func (o *PackageDescription) GetPackageTarballData() string {
	if o == nil || IsNil(o.PackageTarballData) {
		var ret string
		return ret
	}
	return *o.PackageTarballData
}

// GetPackageTarballDataOk returns a tuple with the PackageTarballData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageDescription) GetPackageTarballDataOk() (*string, bool) {
	if o == nil || IsNil(o.PackageTarballData) {
		return nil, false
	}
	return o.PackageTarballData, true
}

// HasPackageTarballData returns a boolean if a field has been set.
func (o *PackageDescription) HasPackageTarballData() bool {
	if o != nil && !IsNil(o.PackageTarballData) {
		return true
	}

	return false
}

// SetPackageTarballData gets a reference to the given string and assigns it to the PackageTarballData field.
func (o *PackageDescription) SetPackageTarballData(v string) {
	o.PackageTarballData = &v
}

// GetPackageTarballURL returns the PackageTarballURL field value if set, zero value otherwise.
func (o *PackageDescription) GetPackageTarballURL() string {
	if o == nil || IsNil(o.PackageTarballURL) {
		var ret string
		return ret
	}
	return *o.PackageTarballURL
}

// GetPackageTarballURLOk returns a tuple with the PackageTarballURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageDescription) GetPackageTarballURLOk() (*string, bool) {
	if o == nil || IsNil(o.PackageTarballURL) {
		return nil, false
	}
	return o.PackageTarballURL, true
}

// HasPackageTarballURL returns a boolean if a field has been set.
func (o *PackageDescription) HasPackageTarballURL() bool {
	if o != nil && !IsNil(o.PackageTarballURL) {
		return true
	}

	return false
}

// SetPackageTarballURL gets a reference to the given string and assigns it to the PackageTarballURL field.
func (o *PackageDescription) SetPackageTarballURL(v string) {
	o.PackageTarballURL = &v
}

func (o PackageDescription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PackageDescription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectName) {
		toSerialize["projectName"] = o.ProjectName
	}
	if !IsNil(o.PackageId) {
		toSerialize["packageId"] = o.PackageId
	}
	if !IsNil(o.PackageXsum) {
		toSerialize["packageXsum"] = o.PackageXsum
	}
	if !IsNil(o.PackageTarballData) {
		toSerialize["packageTarballData"] = o.PackageTarballData
	}
	if !IsNil(o.PackageTarballURL) {
		toSerialize["packageTarballURL"] = o.PackageTarballURL
	}
	return toSerialize, nil
}

type NullablePackageDescription struct {
	value *PackageDescription
	isSet bool
}

func (v NullablePackageDescription) Get() *PackageDescription {
	return v.value
}

func (v *NullablePackageDescription) Set(val *PackageDescription) {
	v.value = val
	v.isSet = true
}

func (v NullablePackageDescription) IsSet() bool {
	return v.isSet
}

func (v *NullablePackageDescription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackageDescription(val *PackageDescription) *NullablePackageDescription {
	return &NullablePackageDescription{value: val, isSet: true}
}

func (v NullablePackageDescription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackageDescription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


