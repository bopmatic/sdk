/*
pb/sr.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProjEnvHeader type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjEnvHeader{}

// ProjEnvHeader struct for ProjEnvHeader
type ProjEnvHeader struct {
	ProjId *string `json:"projId,omitempty"`
	EnvId *string `json:"envId,omitempty"`
}

// NewProjEnvHeader instantiates a new ProjEnvHeader object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjEnvHeader() *ProjEnvHeader {
	this := ProjEnvHeader{}
	return &this
}

// NewProjEnvHeaderWithDefaults instantiates a new ProjEnvHeader object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjEnvHeaderWithDefaults() *ProjEnvHeader {
	this := ProjEnvHeader{}
	return &this
}

// GetProjId returns the ProjId field value if set, zero value otherwise.
func (o *ProjEnvHeader) GetProjId() string {
	if o == nil || IsNil(o.ProjId) {
		var ret string
		return ret
	}
	return *o.ProjId
}

// GetProjIdOk returns a tuple with the ProjId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjEnvHeader) GetProjIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjId) {
		return nil, false
	}
	return o.ProjId, true
}

// HasProjId returns a boolean if a field has been set.
func (o *ProjEnvHeader) HasProjId() bool {
	if o != nil && !IsNil(o.ProjId) {
		return true
	}

	return false
}

// SetProjId gets a reference to the given string and assigns it to the ProjId field.
func (o *ProjEnvHeader) SetProjId(v string) {
	o.ProjId = &v
}

// GetEnvId returns the EnvId field value if set, zero value otherwise.
func (o *ProjEnvHeader) GetEnvId() string {
	if o == nil || IsNil(o.EnvId) {
		var ret string
		return ret
	}
	return *o.EnvId
}

// GetEnvIdOk returns a tuple with the EnvId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjEnvHeader) GetEnvIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvId) {
		return nil, false
	}
	return o.EnvId, true
}

// HasEnvId returns a boolean if a field has been set.
func (o *ProjEnvHeader) HasEnvId() bool {
	if o != nil && !IsNil(o.EnvId) {
		return true
	}

	return false
}

// SetEnvId gets a reference to the given string and assigns it to the EnvId field.
func (o *ProjEnvHeader) SetEnvId(v string) {
	o.EnvId = &v
}

func (o ProjEnvHeader) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjEnvHeader) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjId) {
		toSerialize["projId"] = o.ProjId
	}
	if !IsNil(o.EnvId) {
		toSerialize["envId"] = o.EnvId
	}
	return toSerialize, nil
}

type NullableProjEnvHeader struct {
	value *ProjEnvHeader
	isSet bool
}

func (v NullableProjEnvHeader) Get() *ProjEnvHeader {
	return v.value
}

func (v *NullableProjEnvHeader) Set(val *ProjEnvHeader) {
	v.value = val
	v.isSet = true
}

func (v NullableProjEnvHeader) IsSet() bool {
	return v.isSet
}

func (v *NullableProjEnvHeader) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjEnvHeader(val *ProjEnvHeader) *NullableProjEnvHeader {
	return &NullableProjEnvHeader{value: val, isSet: true}
}

func (v NullableProjEnvHeader) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjEnvHeader) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


