/*
pb/sr.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateApiKeyReply type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApiKeyReply{}

// CreateApiKeyReply struct for CreateApiKeyReply
type CreateApiKeyReply struct {
	Result *ServiceRunnerResult `json:"result,omitempty"`
	KeyId *string `json:"keyId,omitempty"`
	KeyData *string `json:"keyData,omitempty" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
}

// NewCreateApiKeyReply instantiates a new CreateApiKeyReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApiKeyReply() *CreateApiKeyReply {
	this := CreateApiKeyReply{}
	return &this
}

// NewCreateApiKeyReplyWithDefaults instantiates a new CreateApiKeyReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApiKeyReplyWithDefaults() *CreateApiKeyReply {
	this := CreateApiKeyReply{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *CreateApiKeyReply) GetResult() ServiceRunnerResult {
	if o == nil || IsNil(o.Result) {
		var ret ServiceRunnerResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApiKeyReply) GetResultOk() (*ServiceRunnerResult, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *CreateApiKeyReply) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given ServiceRunnerResult and assigns it to the Result field.
func (o *CreateApiKeyReply) SetResult(v ServiceRunnerResult) {
	o.Result = &v
}

// GetKeyId returns the KeyId field value if set, zero value otherwise.
func (o *CreateApiKeyReply) GetKeyId() string {
	if o == nil || IsNil(o.KeyId) {
		var ret string
		return ret
	}
	return *o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApiKeyReply) GetKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.KeyId) {
		return nil, false
	}
	return o.KeyId, true
}

// HasKeyId returns a boolean if a field has been set.
func (o *CreateApiKeyReply) HasKeyId() bool {
	if o != nil && !IsNil(o.KeyId) {
		return true
	}

	return false
}

// SetKeyId gets a reference to the given string and assigns it to the KeyId field.
func (o *CreateApiKeyReply) SetKeyId(v string) {
	o.KeyId = &v
}

// GetKeyData returns the KeyData field value if set, zero value otherwise.
func (o *CreateApiKeyReply) GetKeyData() string {
	if o == nil || IsNil(o.KeyData) {
		var ret string
		return ret
	}
	return *o.KeyData
}

// GetKeyDataOk returns a tuple with the KeyData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApiKeyReply) GetKeyDataOk() (*string, bool) {
	if o == nil || IsNil(o.KeyData) {
		return nil, false
	}
	return o.KeyData, true
}

// HasKeyData returns a boolean if a field has been set.
func (o *CreateApiKeyReply) HasKeyData() bool {
	if o != nil && !IsNil(o.KeyData) {
		return true
	}

	return false
}

// SetKeyData gets a reference to the given string and assigns it to the KeyData field.
func (o *CreateApiKeyReply) SetKeyData(v string) {
	o.KeyData = &v
}

func (o CreateApiKeyReply) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApiKeyReply) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.KeyId) {
		toSerialize["keyId"] = o.KeyId
	}
	if !IsNil(o.KeyData) {
		toSerialize["keyData"] = o.KeyData
	}
	return toSerialize, nil
}

type NullableCreateApiKeyReply struct {
	value *CreateApiKeyReply
	isSet bool
}

func (v NullableCreateApiKeyReply) Get() *CreateApiKeyReply {
	return v.value
}

func (v *NullableCreateApiKeyReply) Set(val *CreateApiKeyReply) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApiKeyReply) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApiKeyReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApiKeyReply(val *CreateApiKeyReply) *NullableCreateApiKeyReply {
	return &NullableCreateApiKeyReply{value: val, isSet: true}
}

func (v NullableCreateApiKeyReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApiKeyReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


