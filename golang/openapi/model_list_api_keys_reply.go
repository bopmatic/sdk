/*
pb/sr.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListApiKeysReply type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListApiKeysReply{}

// ListApiKeysReply struct for ListApiKeysReply
type ListApiKeysReply struct {
	Result *ServiceRunnerResult `json:"result,omitempty"`
	KeyIds []string `json:"keyIds,omitempty"`
}

// NewListApiKeysReply instantiates a new ListApiKeysReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListApiKeysReply() *ListApiKeysReply {
	this := ListApiKeysReply{}
	return &this
}

// NewListApiKeysReplyWithDefaults instantiates a new ListApiKeysReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListApiKeysReplyWithDefaults() *ListApiKeysReply {
	this := ListApiKeysReply{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ListApiKeysReply) GetResult() ServiceRunnerResult {
	if o == nil || IsNil(o.Result) {
		var ret ServiceRunnerResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListApiKeysReply) GetResultOk() (*ServiceRunnerResult, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ListApiKeysReply) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given ServiceRunnerResult and assigns it to the Result field.
func (o *ListApiKeysReply) SetResult(v ServiceRunnerResult) {
	o.Result = &v
}

// GetKeyIds returns the KeyIds field value if set, zero value otherwise.
func (o *ListApiKeysReply) GetKeyIds() []string {
	if o == nil || IsNil(o.KeyIds) {
		var ret []string
		return ret
	}
	return o.KeyIds
}

// GetKeyIdsOk returns a tuple with the KeyIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListApiKeysReply) GetKeyIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.KeyIds) {
		return nil, false
	}
	return o.KeyIds, true
}

// HasKeyIds returns a boolean if a field has been set.
func (o *ListApiKeysReply) HasKeyIds() bool {
	if o != nil && !IsNil(o.KeyIds) {
		return true
	}

	return false
}

// SetKeyIds gets a reference to the given []string and assigns it to the KeyIds field.
func (o *ListApiKeysReply) SetKeyIds(v []string) {
	o.KeyIds = v
}

func (o ListApiKeysReply) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListApiKeysReply) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.KeyIds) {
		toSerialize["keyIds"] = o.KeyIds
	}
	return toSerialize, nil
}

type NullableListApiKeysReply struct {
	value *ListApiKeysReply
	isSet bool
}

func (v NullableListApiKeysReply) Get() *ListApiKeysReply {
	return v.value
}

func (v *NullableListApiKeysReply) Set(val *ListApiKeysReply) {
	v.value = val
	v.isSet = true
}

func (v NullableListApiKeysReply) IsSet() bool {
	return v.isSet
}

func (v *NullableListApiKeysReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListApiKeysReply(val *ListApiKeysReply) *NullableListApiKeysReply {
	return &NullableListApiKeysReply{value: val, isSet: true}
}

func (v NullableListApiKeysReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListApiKeysReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


