openapi: 3.0.1
info:
  title: pb/sr.proto
  version: version not set
servers:
- url: https://api.bopmatic.com/
tags:
- name: ServiceRunner
paths:
  /ServiceRunner/DeletePackage:
    post:
      operationId: DeletePackage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePackageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePackageReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ServiceRunner
      x-codegen-request-body-name: body
  /ServiceRunner/DeployPackage:
    post:
      operationId: DeployPackage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployPackageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployPackageReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ServiceRunner
      x-codegen-request-body-name: body
  /ServiceRunner/DescribePackage:
    post:
      operationId: DescribePackage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePackageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePackageReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ServiceRunner
      x-codegen-request-body-name: body
  /ServiceRunner/GetLogs:
    post:
      operationId: GetLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLogsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLogsReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ServiceRunner
      x-codegen-request-body-name: body
  /ServiceRunner/GetUploadURL:
    post:
      operationId: GetUploadURL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUploadURLRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUploadURLReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ServiceRunner
      x-codegen-request-body-name: body
  /ServiceRunner/ListPackages:
    post:
      operationId: ListPackages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPackagesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagesReply'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ServiceRunner
      x-codegen-request-body-name: body
components:
  schemas:
    DeletePackageReply:
      example:
        state: UPLOADING
      properties:
        state:
          $ref: '#/components/schemas/PackageState'
      type: object
    DeletePackageRequest:
      example:
        packageId: packageId
      properties:
        packageId:
          type: string
      type: object
    DeployPackageReply:
      example:
        state: UPLOADING
      properties:
        state:
          $ref: '#/components/schemas/PackageState'
      type: object
    DeployPackageRequest:
      example:
        desc:
          packageTarballData: packageTarballData
          packageXsum: packageXsum
          packageTarballURL: packageTarballURL
          packageId: packageId
          projectName: projectName
      properties:
        desc:
          $ref: '#/components/schemas/PackageDescription'
      type: object
    DescribePackageReply:
      example:
        rpcEndpoints:
        - rpcEndpoints
        - rpcEndpoints
        packageState: UPLOADING
        desc:
          packageTarballData: packageTarballData
          packageXsum: packageXsum
          packageTarballURL: packageTarballURL
          packageId: packageId
          projectName: projectName
        siteEndpoint: siteEndpoint
      properties:
        desc:
          $ref: '#/components/schemas/PackageDescription'
        packageState:
          $ref: '#/components/schemas/PackageState'
        siteEndpoint:
          title: the following fields are only valid when packageState==PRODUCTION
          type: string
        rpcEndpoints:
          items:
            type: string
          type: array
      type: object
    DescribePackageRequest:
      example:
        packageId: packageId
      properties:
        packageId:
          type: string
      type: object
    GetLogsEntry:
      example:
        message: message
        timestamp: timestamp
      properties:
        timestamp:
          format: uint64
          title: timestamp of the log message expressed as the number of
          type: string
        message:
          description: log message
          title: "seconds since Jan 1, 1970 00:00:00 UTC"
          type: string
      type: object
    GetLogsReply:
      example:
        entries:
        - message: message
          timestamp: timestamp
        - message: message
          timestamp: timestamp
      properties:
        entries:
          items:
            $ref: '#/components/schemas/GetLogsEntry'
          type: array
      type: object
    GetLogsRequest:
      example:
        startTime: startTime
        endTime: endTime
        projectName: projectName
        serviceName: serviceName
        rpcName: rpcName
      properties:
        projectName:
          title: name of the Bopmatic project
          type: string
        serviceName:
          title: name of a service defined within the Bopmatic project
          type: string
        rpcName:
          title: name of an RPC defined within the service
          type: string
        startTime:
          format: uint64
          title: earliest log message to retrieve expressed as the number
          type: string
        endTime:
          description: latest log message to retrieve expressed as the number of
          format: uint64
          title: "of seconds since Jan 1, 1970 00:00:00 UTC"
          type: string
      type: object
    GetUploadURLReply:
      example:
        URL: URL
      properties:
        URL:
          type: string
      type: object
    GetUploadURLRequest:
      example:
        key: key
      properties:
        key:
          type: string
      type: object
    ListPackagesReply:
      example:
        items:
        - packageId: packageId
          projectName: projectName
        - packageId: packageId
          projectName: projectName
      properties:
        items:
          items:
            $ref: '#/components/schemas/ListPackagesReplyListPackagesItem'
          type: array
      type: object
    ListPackagesReplyListPackagesItem:
      example:
        packageId: packageId
        projectName: projectName
      properties:
        projectName:
          type: string
        packageId:
          type: string
      type: object
    ListPackagesRequest:
      example:
        projectName: projectName
      properties:
        projectName:
          title: leave empty for all projects
          type: string
      type: object
    PackageDescription:
      example:
        packageTarballData: packageTarballData
        packageXsum: packageXsum
        packageTarballURL: packageTarballURL
        packageId: packageId
        projectName: projectName
      properties:
        projectName:
          title: name of the Bopmatic project; must be unique
          type: string
        packageId:
          title: hex string of first 4 bytes of packageXsum
          type: string
        packageXsum:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          title: sha256 checksum of packageTarballData
          type: string
        packageTarballData:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          title: package tarball content in .tar.xz format (limited to 6MiB);
          type: string
        packageTarballURL:
          title: URL to package tarball (when larger than 6MiB)
          type: string
      type: object
    PackageState:
      default: UPLOADING
      enum:
      - UPLOADING
      - UPLOADED
      - VALIDATING
      - INVALID
      - BUILDING
      - DEPLOYING
      - PRODUCTION
      - DEACTIVATING
      - DELETING
      - SUPPORT_NEEDED
      - DELETED
      - UNKNOWN_PKG_STATE
      title: |-
        - UPLOADING: package is currently in the process of being uploaded
         - UPLOADED: upload has completed; the package has not yet started validataion
         - VALIDATING: the package is in the process of being validated
         - INVALID: the package failed validation checks and cannot be deployed
         - BUILDING: the package passed validation and is in the process of being built
         - DEPLOYING: the package is built and in the process of being deployed to production
         - PRODUCTION: the package is active in production
         - DEACTIVATING: the package is in the process of being deactivated from production
         - DELETING: the package is in the process of being deleted
         - SUPPORT_NEEDED: something went wrong and Bopmatic support needs to investigate
         - DELETED: the package has been deleted
         - UNKNOWN_PKG_STATE: MAX_INT
      type: string
    protobufAny:
      additionalProperties:
        type: object
      example:
        '@type': '@type'
      properties:
        '@type':
          type: string
      type: object
    rpcStatus:
      example:
        code: 0
        details:
        - '@type': '@type'
        - '@type': '@type'
        message: message
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
      type: object
x-original-swagger-version: "2.0"
