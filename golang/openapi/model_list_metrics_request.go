/*
pb/sr.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListMetricsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListMetricsRequest{}

// ListMetricsRequest struct for ListMetricsRequest
type ListMetricsRequest struct {
	Scope *MetricsScope `json:"scope,omitempty"`
}

// NewListMetricsRequest instantiates a new ListMetricsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListMetricsRequest() *ListMetricsRequest {
	this := ListMetricsRequest{}
	var scope MetricsScope = METRIC_SCOPE_ALL
	this.Scope = &scope
	return &this
}

// NewListMetricsRequestWithDefaults instantiates a new ListMetricsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListMetricsRequestWithDefaults() *ListMetricsRequest {
	this := ListMetricsRequest{}
	var scope MetricsScope = METRIC_SCOPE_ALL
	this.Scope = &scope
	return &this
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *ListMetricsRequest) GetScope() MetricsScope {
	if o == nil || IsNil(o.Scope) {
		var ret MetricsScope
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListMetricsRequest) GetScopeOk() (*MetricsScope, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *ListMetricsRequest) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given MetricsScope and assigns it to the Scope field.
func (o *ListMetricsRequest) SetScope(v MetricsScope) {
	o.Scope = &v
}

func (o ListMetricsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListMetricsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	return toSerialize, nil
}

type NullableListMetricsRequest struct {
	value *ListMetricsRequest
	isSet bool
}

func (v NullableListMetricsRequest) Get() *ListMetricsRequest {
	return v.value
}

func (v *NullableListMetricsRequest) Set(val *ListMetricsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListMetricsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListMetricsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListMetricsRequest(val *ListMetricsRequest) *NullableListMetricsRequest {
	return &NullableListMetricsRequest{value: val, isSet: true}
}

func (v NullableListMetricsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListMetricsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


