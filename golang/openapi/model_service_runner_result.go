/*
pb/sr.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceRunnerResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceRunnerResult{}

// ServiceRunnerResult struct for ServiceRunnerResult
type ServiceRunnerResult struct {
	Status *ServiceRunnerStatus `json:"status,omitempty"`
	StatusDetail *string `json:"statusDetail,omitempty"`
}

// NewServiceRunnerResult instantiates a new ServiceRunnerResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceRunnerResult() *ServiceRunnerResult {
	this := ServiceRunnerResult{}
	var status ServiceRunnerStatus = INVALID
	this.Status = &status
	return &this
}

// NewServiceRunnerResultWithDefaults instantiates a new ServiceRunnerResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceRunnerResultWithDefaults() *ServiceRunnerResult {
	this := ServiceRunnerResult{}
	var status ServiceRunnerStatus = INVALID
	this.Status = &status
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ServiceRunnerResult) GetStatus() ServiceRunnerStatus {
	if o == nil || IsNil(o.Status) {
		var ret ServiceRunnerStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRunnerResult) GetStatusOk() (*ServiceRunnerStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ServiceRunnerResult) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ServiceRunnerStatus and assigns it to the Status field.
func (o *ServiceRunnerResult) SetStatus(v ServiceRunnerStatus) {
	o.Status = &v
}

// GetStatusDetail returns the StatusDetail field value if set, zero value otherwise.
func (o *ServiceRunnerResult) GetStatusDetail() string {
	if o == nil || IsNil(o.StatusDetail) {
		var ret string
		return ret
	}
	return *o.StatusDetail
}

// GetStatusDetailOk returns a tuple with the StatusDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRunnerResult) GetStatusDetailOk() (*string, bool) {
	if o == nil || IsNil(o.StatusDetail) {
		return nil, false
	}
	return o.StatusDetail, true
}

// HasStatusDetail returns a boolean if a field has been set.
func (o *ServiceRunnerResult) HasStatusDetail() bool {
	if o != nil && !IsNil(o.StatusDetail) {
		return true
	}

	return false
}

// SetStatusDetail gets a reference to the given string and assigns it to the StatusDetail field.
func (o *ServiceRunnerResult) SetStatusDetail(v string) {
	o.StatusDetail = &v
}

func (o ServiceRunnerResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceRunnerResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusDetail) {
		toSerialize["statusDetail"] = o.StatusDetail
	}
	return toSerialize, nil
}

type NullableServiceRunnerResult struct {
	value *ServiceRunnerResult
	isSet bool
}

func (v NullableServiceRunnerResult) Get() *ServiceRunnerResult {
	return v.value
}

func (v *NullableServiceRunnerResult) Set(val *ServiceRunnerResult) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceRunnerResult) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceRunnerResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceRunnerResult(val *ServiceRunnerResult) *NullableServiceRunnerResult {
	return &NullableServiceRunnerResult{value: val, isSet: true}
}

func (v NullableServiceRunnerResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceRunnerResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


