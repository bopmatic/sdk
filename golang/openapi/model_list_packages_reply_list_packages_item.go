/*
pb/sr.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListPackagesReplyListPackagesItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPackagesReplyListPackagesItem{}

// ListPackagesReplyListPackagesItem struct for ListPackagesReplyListPackagesItem
type ListPackagesReplyListPackagesItem struct {
	ProjectName *string `json:"projectName,omitempty"`
	PackageId *string `json:"packageId,omitempty"`
}

// NewListPackagesReplyListPackagesItem instantiates a new ListPackagesReplyListPackagesItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPackagesReplyListPackagesItem() *ListPackagesReplyListPackagesItem {
	this := ListPackagesReplyListPackagesItem{}
	return &this
}

// NewListPackagesReplyListPackagesItemWithDefaults instantiates a new ListPackagesReplyListPackagesItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPackagesReplyListPackagesItemWithDefaults() *ListPackagesReplyListPackagesItem {
	this := ListPackagesReplyListPackagesItem{}
	return &this
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *ListPackagesReplyListPackagesItem) GetProjectName() string {
	if o == nil || IsNil(o.ProjectName) {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPackagesReplyListPackagesItem) GetProjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectName) {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *ListPackagesReplyListPackagesItem) HasProjectName() bool {
	if o != nil && !IsNil(o.ProjectName) {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *ListPackagesReplyListPackagesItem) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetPackageId returns the PackageId field value if set, zero value otherwise.
func (o *ListPackagesReplyListPackagesItem) GetPackageId() string {
	if o == nil || IsNil(o.PackageId) {
		var ret string
		return ret
	}
	return *o.PackageId
}

// GetPackageIdOk returns a tuple with the PackageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPackagesReplyListPackagesItem) GetPackageIdOk() (*string, bool) {
	if o == nil || IsNil(o.PackageId) {
		return nil, false
	}
	return o.PackageId, true
}

// HasPackageId returns a boolean if a field has been set.
func (o *ListPackagesReplyListPackagesItem) HasPackageId() bool {
	if o != nil && !IsNil(o.PackageId) {
		return true
	}

	return false
}

// SetPackageId gets a reference to the given string and assigns it to the PackageId field.
func (o *ListPackagesReplyListPackagesItem) SetPackageId(v string) {
	o.PackageId = &v
}

func (o ListPackagesReplyListPackagesItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPackagesReplyListPackagesItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectName) {
		toSerialize["projectName"] = o.ProjectName
	}
	if !IsNil(o.PackageId) {
		toSerialize["packageId"] = o.PackageId
	}
	return toSerialize, nil
}

type NullableListPackagesReplyListPackagesItem struct {
	value *ListPackagesReplyListPackagesItem
	isSet bool
}

func (v NullableListPackagesReplyListPackagesItem) Get() *ListPackagesReplyListPackagesItem {
	return v.value
}

func (v *NullableListPackagesReplyListPackagesItem) Set(val *ListPackagesReplyListPackagesItem) {
	v.value = val
	v.isSet = true
}

func (v NullableListPackagesReplyListPackagesItem) IsSet() bool {
	return v.isSet
}

func (v *NullableListPackagesReplyListPackagesItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPackagesReplyListPackagesItem(val *ListPackagesReplyListPackagesItem) *NullableListPackagesReplyListPackagesItem {
	return &NullableListPackagesReplyListPackagesItem{value: val, isSet: true}
}

func (v NullableListPackagesReplyListPackagesItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPackagesReplyListPackagesItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


