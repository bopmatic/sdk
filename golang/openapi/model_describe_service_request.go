/*
pb/sr.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DescribeServiceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeServiceRequest{}

// DescribeServiceRequest struct for DescribeServiceRequest
type DescribeServiceRequest struct {
	SvcHeader *ServiceHeader `json:"svcHeader,omitempty"`
}

// NewDescribeServiceRequest instantiates a new DescribeServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeServiceRequest() *DescribeServiceRequest {
	this := DescribeServiceRequest{}
	return &this
}

// NewDescribeServiceRequestWithDefaults instantiates a new DescribeServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeServiceRequestWithDefaults() *DescribeServiceRequest {
	this := DescribeServiceRequest{}
	return &this
}

// GetSvcHeader returns the SvcHeader field value if set, zero value otherwise.
func (o *DescribeServiceRequest) GetSvcHeader() ServiceHeader {
	if o == nil || IsNil(o.SvcHeader) {
		var ret ServiceHeader
		return ret
	}
	return *o.SvcHeader
}

// GetSvcHeaderOk returns a tuple with the SvcHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeServiceRequest) GetSvcHeaderOk() (*ServiceHeader, bool) {
	if o == nil || IsNil(o.SvcHeader) {
		return nil, false
	}
	return o.SvcHeader, true
}

// HasSvcHeader returns a boolean if a field has been set.
func (o *DescribeServiceRequest) HasSvcHeader() bool {
	if o != nil && !IsNil(o.SvcHeader) {
		return true
	}

	return false
}

// SetSvcHeader gets a reference to the given ServiceHeader and assigns it to the SvcHeader field.
func (o *DescribeServiceRequest) SetSvcHeader(v ServiceHeader) {
	o.SvcHeader = &v
}

func (o DescribeServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeServiceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SvcHeader) {
		toSerialize["svcHeader"] = o.SvcHeader
	}
	return toSerialize, nil
}

type NullableDescribeServiceRequest struct {
	value *DescribeServiceRequest
	isSet bool
}

func (v NullableDescribeServiceRequest) Get() *DescribeServiceRequest {
	return v.value
}

func (v *NullableDescribeServiceRequest) Set(val *DescribeServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeServiceRequest(val *DescribeServiceRequest) *NullableDescribeServiceRequest {
	return &NullableDescribeServiceRequest{value: val, isSet: true}
}

func (v NullableDescribeServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


