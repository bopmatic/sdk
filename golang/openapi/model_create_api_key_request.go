/*
pb/sr.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateApiKeyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApiKeyRequest{}

// CreateApiKeyRequest struct for CreateApiKeyRequest
type CreateApiKeyRequest struct {
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	// time the key should expire expressed as the number of seconds since Jan 1, 1970 00:00:00 UTC. A value of 0 indicates the key should never expire.
	ExpireTime *string `json:"expireTime,omitempty"`
}

// NewCreateApiKeyRequest instantiates a new CreateApiKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApiKeyRequest() *CreateApiKeyRequest {
	this := CreateApiKeyRequest{}
	return &this
}

// NewCreateApiKeyRequestWithDefaults instantiates a new CreateApiKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApiKeyRequestWithDefaults() *CreateApiKeyRequest {
	this := CreateApiKeyRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateApiKeyRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApiKeyRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateApiKeyRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateApiKeyRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateApiKeyRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApiKeyRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateApiKeyRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateApiKeyRequest) SetDescription(v string) {
	o.Description = &v
}

// GetExpireTime returns the ExpireTime field value if set, zero value otherwise.
func (o *CreateApiKeyRequest) GetExpireTime() string {
	if o == nil || IsNil(o.ExpireTime) {
		var ret string
		return ret
	}
	return *o.ExpireTime
}

// GetExpireTimeOk returns a tuple with the ExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApiKeyRequest) GetExpireTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpireTime) {
		return nil, false
	}
	return o.ExpireTime, true
}

// HasExpireTime returns a boolean if a field has been set.
func (o *CreateApiKeyRequest) HasExpireTime() bool {
	if o != nil && !IsNil(o.ExpireTime) {
		return true
	}

	return false
}

// SetExpireTime gets a reference to the given string and assigns it to the ExpireTime field.
func (o *CreateApiKeyRequest) SetExpireTime(v string) {
	o.ExpireTime = &v
}

func (o CreateApiKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApiKeyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ExpireTime) {
		toSerialize["expireTime"] = o.ExpireTime
	}
	return toSerialize, nil
}

type NullableCreateApiKeyRequest struct {
	value *CreateApiKeyRequest
	isSet bool
}

func (v NullableCreateApiKeyRequest) Get() *CreateApiKeyRequest {
	return v.value
}

func (v *NullableCreateApiKeyRequest) Set(val *CreateApiKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApiKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApiKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApiKeyRequest(val *CreateApiKeyRequest) *NullableCreateApiKeyRequest {
	return &NullableCreateApiKeyRequest{value: val, isSet: true}
}

func (v NullableCreateApiKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApiKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


