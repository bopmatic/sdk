/*
pb/sr.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UploadPackageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UploadPackageRequest{}

// UploadPackageRequest struct for UploadPackageRequest
type UploadPackageRequest struct {
	ProjId *string `json:"projId,omitempty"`
	PackageXsum *string `json:"packageXsum,omitempty" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
	// package tarball content in .tar.xz format (limited to 6MiB);
	PackageTarballData *string `json:"packageTarballData,omitempty" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
	PackageTarballURL *string `json:"packageTarballURL,omitempty"`
}

// NewUploadPackageRequest instantiates a new UploadPackageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUploadPackageRequest() *UploadPackageRequest {
	this := UploadPackageRequest{}
	return &this
}

// NewUploadPackageRequestWithDefaults instantiates a new UploadPackageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUploadPackageRequestWithDefaults() *UploadPackageRequest {
	this := UploadPackageRequest{}
	return &this
}

// GetProjId returns the ProjId field value if set, zero value otherwise.
func (o *UploadPackageRequest) GetProjId() string {
	if o == nil || IsNil(o.ProjId) {
		var ret string
		return ret
	}
	return *o.ProjId
}

// GetProjIdOk returns a tuple with the ProjId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UploadPackageRequest) GetProjIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjId) {
		return nil, false
	}
	return o.ProjId, true
}

// HasProjId returns a boolean if a field has been set.
func (o *UploadPackageRequest) HasProjId() bool {
	if o != nil && !IsNil(o.ProjId) {
		return true
	}

	return false
}

// SetProjId gets a reference to the given string and assigns it to the ProjId field.
func (o *UploadPackageRequest) SetProjId(v string) {
	o.ProjId = &v
}

// GetPackageXsum returns the PackageXsum field value if set, zero value otherwise.
func (o *UploadPackageRequest) GetPackageXsum() string {
	if o == nil || IsNil(o.PackageXsum) {
		var ret string
		return ret
	}
	return *o.PackageXsum
}

// GetPackageXsumOk returns a tuple with the PackageXsum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UploadPackageRequest) GetPackageXsumOk() (*string, bool) {
	if o == nil || IsNil(o.PackageXsum) {
		return nil, false
	}
	return o.PackageXsum, true
}

// HasPackageXsum returns a boolean if a field has been set.
func (o *UploadPackageRequest) HasPackageXsum() bool {
	if o != nil && !IsNil(o.PackageXsum) {
		return true
	}

	return false
}

// SetPackageXsum gets a reference to the given string and assigns it to the PackageXsum field.
func (o *UploadPackageRequest) SetPackageXsum(v string) {
	o.PackageXsum = &v
}

// GetPackageTarballData returns the PackageTarballData field value if set, zero value otherwise.
func (o *UploadPackageRequest) GetPackageTarballData() string {
	if o == nil || IsNil(o.PackageTarballData) {
		var ret string
		return ret
	}
	return *o.PackageTarballData
}

// GetPackageTarballDataOk returns a tuple with the PackageTarballData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UploadPackageRequest) GetPackageTarballDataOk() (*string, bool) {
	if o == nil || IsNil(o.PackageTarballData) {
		return nil, false
	}
	return o.PackageTarballData, true
}

// HasPackageTarballData returns a boolean if a field has been set.
func (o *UploadPackageRequest) HasPackageTarballData() bool {
	if o != nil && !IsNil(o.PackageTarballData) {
		return true
	}

	return false
}

// SetPackageTarballData gets a reference to the given string and assigns it to the PackageTarballData field.
func (o *UploadPackageRequest) SetPackageTarballData(v string) {
	o.PackageTarballData = &v
}

// GetPackageTarballURL returns the PackageTarballURL field value if set, zero value otherwise.
func (o *UploadPackageRequest) GetPackageTarballURL() string {
	if o == nil || IsNil(o.PackageTarballURL) {
		var ret string
		return ret
	}
	return *o.PackageTarballURL
}

// GetPackageTarballURLOk returns a tuple with the PackageTarballURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UploadPackageRequest) GetPackageTarballURLOk() (*string, bool) {
	if o == nil || IsNil(o.PackageTarballURL) {
		return nil, false
	}
	return o.PackageTarballURL, true
}

// HasPackageTarballURL returns a boolean if a field has been set.
func (o *UploadPackageRequest) HasPackageTarballURL() bool {
	if o != nil && !IsNil(o.PackageTarballURL) {
		return true
	}

	return false
}

// SetPackageTarballURL gets a reference to the given string and assigns it to the PackageTarballURL field.
func (o *UploadPackageRequest) SetPackageTarballURL(v string) {
	o.PackageTarballURL = &v
}

func (o UploadPackageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UploadPackageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjId) {
		toSerialize["projId"] = o.ProjId
	}
	if !IsNil(o.PackageXsum) {
		toSerialize["packageXsum"] = o.PackageXsum
	}
	if !IsNil(o.PackageTarballData) {
		toSerialize["packageTarballData"] = o.PackageTarballData
	}
	if !IsNil(o.PackageTarballURL) {
		toSerialize["packageTarballURL"] = o.PackageTarballURL
	}
	return toSerialize, nil
}

type NullableUploadPackageRequest struct {
	value *UploadPackageRequest
	isSet bool
}

func (v NullableUploadPackageRequest) Get() *UploadPackageRequest {
	return v.value
}

func (v *NullableUploadPackageRequest) Set(val *UploadPackageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUploadPackageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUploadPackageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUploadPackageRequest(val *UploadPackageRequest) *NullableUploadPackageRequest {
	return &NullableUploadPackageRequest{value: val, isSet: true}
}

func (v NullableUploadPackageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUploadPackageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


