/*
pb/sr.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetMetricSamplesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMetricSamplesRequest{}

// GetMetricSamplesRequest struct for GetMetricSamplesRequest
type GetMetricSamplesRequest struct {
	ProjId *string `json:"projId,omitempty"`
	EnvId *string `json:"envId,omitempty"`
	Scope *MetricsScope `json:"scope,omitempty"`
	ScopeQualifier *string `json:"scopeQualifier,omitempty"`
	MetricNames []string `json:"metricNames,omitempty"`
	StartTime *string `json:"startTime,omitempty"`
	// latest metric to retrieve expressed as the number of
	EndTime *string `json:"endTime,omitempty"`
	Format *MetricsFormat `json:"format,omitempty"`
	SamplePeriod *string `json:"samplePeriod,omitempty"`
}

// NewGetMetricSamplesRequest instantiates a new GetMetricSamplesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMetricSamplesRequest() *GetMetricSamplesRequest {
	this := GetMetricSamplesRequest{}
	var scope MetricsScope = INVALID_METRIC_SCOPE
	this.Scope = &scope
	var format MetricsFormat = INVALID_METRIC_FORMAT
	this.Format = &format
	return &this
}

// NewGetMetricSamplesRequestWithDefaults instantiates a new GetMetricSamplesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMetricSamplesRequestWithDefaults() *GetMetricSamplesRequest {
	this := GetMetricSamplesRequest{}
	var scope MetricsScope = INVALID_METRIC_SCOPE
	this.Scope = &scope
	var format MetricsFormat = INVALID_METRIC_FORMAT
	this.Format = &format
	return &this
}

// GetProjId returns the ProjId field value if set, zero value otherwise.
func (o *GetMetricSamplesRequest) GetProjId() string {
	if o == nil || IsNil(o.ProjId) {
		var ret string
		return ret
	}
	return *o.ProjId
}

// GetProjIdOk returns a tuple with the ProjId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMetricSamplesRequest) GetProjIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjId) {
		return nil, false
	}
	return o.ProjId, true
}

// HasProjId returns a boolean if a field has been set.
func (o *GetMetricSamplesRequest) HasProjId() bool {
	if o != nil && !IsNil(o.ProjId) {
		return true
	}

	return false
}

// SetProjId gets a reference to the given string and assigns it to the ProjId field.
func (o *GetMetricSamplesRequest) SetProjId(v string) {
	o.ProjId = &v
}

// GetEnvId returns the EnvId field value if set, zero value otherwise.
func (o *GetMetricSamplesRequest) GetEnvId() string {
	if o == nil || IsNil(o.EnvId) {
		var ret string
		return ret
	}
	return *o.EnvId
}

// GetEnvIdOk returns a tuple with the EnvId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMetricSamplesRequest) GetEnvIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvId) {
		return nil, false
	}
	return o.EnvId, true
}

// HasEnvId returns a boolean if a field has been set.
func (o *GetMetricSamplesRequest) HasEnvId() bool {
	if o != nil && !IsNil(o.EnvId) {
		return true
	}

	return false
}

// SetEnvId gets a reference to the given string and assigns it to the EnvId field.
func (o *GetMetricSamplesRequest) SetEnvId(v string) {
	o.EnvId = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *GetMetricSamplesRequest) GetScope() MetricsScope {
	if o == nil || IsNil(o.Scope) {
		var ret MetricsScope
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMetricSamplesRequest) GetScopeOk() (*MetricsScope, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *GetMetricSamplesRequest) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given MetricsScope and assigns it to the Scope field.
func (o *GetMetricSamplesRequest) SetScope(v MetricsScope) {
	o.Scope = &v
}

// GetScopeQualifier returns the ScopeQualifier field value if set, zero value otherwise.
func (o *GetMetricSamplesRequest) GetScopeQualifier() string {
	if o == nil || IsNil(o.ScopeQualifier) {
		var ret string
		return ret
	}
	return *o.ScopeQualifier
}

// GetScopeQualifierOk returns a tuple with the ScopeQualifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMetricSamplesRequest) GetScopeQualifierOk() (*string, bool) {
	if o == nil || IsNil(o.ScopeQualifier) {
		return nil, false
	}
	return o.ScopeQualifier, true
}

// HasScopeQualifier returns a boolean if a field has been set.
func (o *GetMetricSamplesRequest) HasScopeQualifier() bool {
	if o != nil && !IsNil(o.ScopeQualifier) {
		return true
	}

	return false
}

// SetScopeQualifier gets a reference to the given string and assigns it to the ScopeQualifier field.
func (o *GetMetricSamplesRequest) SetScopeQualifier(v string) {
	o.ScopeQualifier = &v
}

// GetMetricNames returns the MetricNames field value if set, zero value otherwise.
func (o *GetMetricSamplesRequest) GetMetricNames() []string {
	if o == nil || IsNil(o.MetricNames) {
		var ret []string
		return ret
	}
	return o.MetricNames
}

// GetMetricNamesOk returns a tuple with the MetricNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMetricSamplesRequest) GetMetricNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.MetricNames) {
		return nil, false
	}
	return o.MetricNames, true
}

// HasMetricNames returns a boolean if a field has been set.
func (o *GetMetricSamplesRequest) HasMetricNames() bool {
	if o != nil && !IsNil(o.MetricNames) {
		return true
	}

	return false
}

// SetMetricNames gets a reference to the given []string and assigns it to the MetricNames field.
func (o *GetMetricSamplesRequest) SetMetricNames(v []string) {
	o.MetricNames = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *GetMetricSamplesRequest) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMetricSamplesRequest) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *GetMetricSamplesRequest) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *GetMetricSamplesRequest) SetStartTime(v string) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *GetMetricSamplesRequest) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMetricSamplesRequest) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *GetMetricSamplesRequest) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *GetMetricSamplesRequest) SetEndTime(v string) {
	o.EndTime = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *GetMetricSamplesRequest) GetFormat() MetricsFormat {
	if o == nil || IsNil(o.Format) {
		var ret MetricsFormat
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMetricSamplesRequest) GetFormatOk() (*MetricsFormat, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *GetMetricSamplesRequest) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given MetricsFormat and assigns it to the Format field.
func (o *GetMetricSamplesRequest) SetFormat(v MetricsFormat) {
	o.Format = &v
}

// GetSamplePeriod returns the SamplePeriod field value if set, zero value otherwise.
func (o *GetMetricSamplesRequest) GetSamplePeriod() string {
	if o == nil || IsNil(o.SamplePeriod) {
		var ret string
		return ret
	}
	return *o.SamplePeriod
}

// GetSamplePeriodOk returns a tuple with the SamplePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMetricSamplesRequest) GetSamplePeriodOk() (*string, bool) {
	if o == nil || IsNil(o.SamplePeriod) {
		return nil, false
	}
	return o.SamplePeriod, true
}

// HasSamplePeriod returns a boolean if a field has been set.
func (o *GetMetricSamplesRequest) HasSamplePeriod() bool {
	if o != nil && !IsNil(o.SamplePeriod) {
		return true
	}

	return false
}

// SetSamplePeriod gets a reference to the given string and assigns it to the SamplePeriod field.
func (o *GetMetricSamplesRequest) SetSamplePeriod(v string) {
	o.SamplePeriod = &v
}

func (o GetMetricSamplesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMetricSamplesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjId) {
		toSerialize["projId"] = o.ProjId
	}
	if !IsNil(o.EnvId) {
		toSerialize["envId"] = o.EnvId
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	if !IsNil(o.ScopeQualifier) {
		toSerialize["scopeQualifier"] = o.ScopeQualifier
	}
	if !IsNil(o.MetricNames) {
		toSerialize["metricNames"] = o.MetricNames
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.SamplePeriod) {
		toSerialize["samplePeriod"] = o.SamplePeriod
	}
	return toSerialize, nil
}

type NullableGetMetricSamplesRequest struct {
	value *GetMetricSamplesRequest
	isSet bool
}

func (v NullableGetMetricSamplesRequest) Get() *GetMetricSamplesRequest {
	return v.value
}

func (v *NullableGetMetricSamplesRequest) Set(val *GetMetricSamplesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMetricSamplesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMetricSamplesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMetricSamplesRequest(val *GetMetricSamplesRequest) *NullableGetMetricSamplesRequest {
	return &NullableGetMetricSamplesRequest{value: val, isSet: true}
}

func (v NullableGetMetricSamplesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMetricSamplesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


