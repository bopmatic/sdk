// Code generated by go-swagger; DO NOT EDIT.

package service_runner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bopmatic/sdk/golang/models"
)

// DescribeDeploymentReader is a Reader for the DescribeDeployment structure.
type DescribeDeploymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DescribeDeploymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDescribeDeploymentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDescribeDeploymentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDescribeDeploymentOK creates a DescribeDeploymentOK with default headers values
func NewDescribeDeploymentOK() *DescribeDeploymentOK {
	return &DescribeDeploymentOK{}
}

/*
DescribeDeploymentOK describes a response with status code 200, with default header values.

A successful response.
*/
type DescribeDeploymentOK struct {
	Payload *models.DescribeDeploymentReply
}

// IsSuccess returns true when this describe deployment o k response has a 2xx status code
func (o *DescribeDeploymentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this describe deployment o k response has a 3xx status code
func (o *DescribeDeploymentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this describe deployment o k response has a 4xx status code
func (o *DescribeDeploymentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this describe deployment o k response has a 5xx status code
func (o *DescribeDeploymentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this describe deployment o k response a status code equal to that given
func (o *DescribeDeploymentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the describe deployment o k response
func (o *DescribeDeploymentOK) Code() int {
	return 200
}

func (o *DescribeDeploymentOK) Error() string {
	return fmt.Sprintf("[POST /ServiceRunner/DescribeDeployment][%d] describeDeploymentOK  %+v", 200, o.Payload)
}

func (o *DescribeDeploymentOK) String() string {
	return fmt.Sprintf("[POST /ServiceRunner/DescribeDeployment][%d] describeDeploymentOK  %+v", 200, o.Payload)
}

func (o *DescribeDeploymentOK) GetPayload() *models.DescribeDeploymentReply {
	return o.Payload
}

func (o *DescribeDeploymentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DescribeDeploymentReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeDeploymentDefault creates a DescribeDeploymentDefault with default headers values
func NewDescribeDeploymentDefault(code int) *DescribeDeploymentDefault {
	return &DescribeDeploymentDefault{
		_statusCode: code,
	}
}

/*
DescribeDeploymentDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type DescribeDeploymentDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this describe deployment default response has a 2xx status code
func (o *DescribeDeploymentDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this describe deployment default response has a 3xx status code
func (o *DescribeDeploymentDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this describe deployment default response has a 4xx status code
func (o *DescribeDeploymentDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this describe deployment default response has a 5xx status code
func (o *DescribeDeploymentDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this describe deployment default response a status code equal to that given
func (o *DescribeDeploymentDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the describe deployment default response
func (o *DescribeDeploymentDefault) Code() int {
	return o._statusCode
}

func (o *DescribeDeploymentDefault) Error() string {
	return fmt.Sprintf("[POST /ServiceRunner/DescribeDeployment][%d] DescribeDeployment default  %+v", o._statusCode, o.Payload)
}

func (o *DescribeDeploymentDefault) String() string {
	return fmt.Sprintf("[POST /ServiceRunner/DescribeDeployment][%d] DescribeDeployment default  %+v", o._statusCode, o.Payload)
}

func (o *DescribeDeploymentDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *DescribeDeploymentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
