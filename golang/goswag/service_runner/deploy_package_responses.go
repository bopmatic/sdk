// Code generated by go-swagger; DO NOT EDIT.

package service_runner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/bopmatic/sdk/golang/models"
)

// DeployPackageReader is a Reader for the DeployPackage structure.
type DeployPackageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeployPackageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeployPackageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDeployPackageDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeployPackageOK creates a DeployPackageOK with default headers values
func NewDeployPackageOK() *DeployPackageOK {
	return &DeployPackageOK{}
}

/* DeployPackageOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeployPackageOK struct {
	Payload *models.DeployPackageReply
}

// IsSuccess returns true when this deploy package o k response has a 2xx status code
func (o *DeployPackageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this deploy package o k response has a 3xx status code
func (o *DeployPackageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy package o k response has a 4xx status code
func (o *DeployPackageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this deploy package o k response has a 5xx status code
func (o *DeployPackageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this deploy package o k response a status code equal to that given
func (o *DeployPackageOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeployPackageOK) Error() string {
	return fmt.Sprintf("[POST /ServiceRunner/DeployPackage][%d] deployPackageOK  %+v", 200, o.Payload)
}

func (o *DeployPackageOK) String() string {
	return fmt.Sprintf("[POST /ServiceRunner/DeployPackage][%d] deployPackageOK  %+v", 200, o.Payload)
}

func (o *DeployPackageOK) GetPayload() *models.DeployPackageReply {
	return o.Payload
}

func (o *DeployPackageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeployPackageReply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeployPackageDefault creates a DeployPackageDefault with default headers values
func NewDeployPackageDefault(code int) *DeployPackageDefault {
	return &DeployPackageDefault{
		_statusCode: code,
	}
}

/* DeployPackageDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type DeployPackageDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the deploy package default response
func (o *DeployPackageDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this deploy package default response has a 2xx status code
func (o *DeployPackageDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this deploy package default response has a 3xx status code
func (o *DeployPackageDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this deploy package default response has a 4xx status code
func (o *DeployPackageDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this deploy package default response has a 5xx status code
func (o *DeployPackageDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this deploy package default response a status code equal to that given
func (o *DeployPackageDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *DeployPackageDefault) Error() string {
	return fmt.Sprintf("[POST /ServiceRunner/DeployPackage][%d] DeployPackage default  %+v", o._statusCode, o.Payload)
}

func (o *DeployPackageDefault) String() string {
	return fmt.Sprintf("[POST /ServiceRunner/DeployPackage][%d] DeployPackage default  %+v", o._statusCode, o.Payload)
}

func (o *DeployPackageDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *DeployPackageDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
